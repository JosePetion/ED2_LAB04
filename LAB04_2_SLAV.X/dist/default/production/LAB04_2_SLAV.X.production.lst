

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Fri Aug 19 09:29:42 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.40
    21                           ; Generated 17/11/2021 GMT
    22                           ; 
    23                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0000                     	;# 
   290  0001                     	;# 
   291  0002                     	;# 
   292  0003                     	;# 
   293  0004                     	;# 
   294  0005                     	;# 
   295  0006                     	;# 
   296  0007                     	;# 
   297  0008                     	;# 
   298  0009                     	;# 
   299  000A                     	;# 
   300  000B                     	;# 
   301  000C                     	;# 
   302  000D                     	;# 
   303  000E                     	;# 
   304  000E                     	;# 
   305  000F                     	;# 
   306  0010                     	;# 
   307  0011                     	;# 
   308  0012                     	;# 
   309  0013                     	;# 
   310  0014                     	;# 
   311  0015                     	;# 
   312  0015                     	;# 
   313  0016                     	;# 
   314  0017                     	;# 
   315  0018                     	;# 
   316  0019                     	;# 
   317  001A                     	;# 
   318  001B                     	;# 
   319  001B                     	;# 
   320  001C                     	;# 
   321  001D                     	;# 
   322  001E                     	;# 
   323  001F                     	;# 
   324  0081                     	;# 
   325  0085                     	;# 
   326  0086                     	;# 
   327  0087                     	;# 
   328  0088                     	;# 
   329  0089                     	;# 
   330  008C                     	;# 
   331  008D                     	;# 
   332  008E                     	;# 
   333  008F                     	;# 
   334  0090                     	;# 
   335  0091                     	;# 
   336  0092                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0094                     	;# 
   341  0095                     	;# 
   342  0096                     	;# 
   343  0097                     	;# 
   344  0098                     	;# 
   345  0099                     	;# 
   346  009A                     	;# 
   347  009B                     	;# 
   348  009C                     	;# 
   349  009D                     	;# 
   350  009E                     	;# 
   351  009F                     	;# 
   352  0105                     	;# 
   353  0107                     	;# 
   354  0108                     	;# 
   355  0109                     	;# 
   356  010C                     	;# 
   357  010C                     	;# 
   358  010D                     	;# 
   359  010E                     	;# 
   360  010F                     	;# 
   361  0185                     	;# 
   362  0187                     	;# 
   363  0188                     	;# 
   364  0189                     	;# 
   365  018C                     	;# 
   366  018D                     	;# 
   367  0000                     	;# 
   368  0001                     	;# 
   369  0002                     	;# 
   370  0003                     	;# 
   371  0004                     	;# 
   372  0005                     	;# 
   373  0006                     	;# 
   374  0007                     	;# 
   375  0008                     	;# 
   376  0009                     	;# 
   377  000A                     	;# 
   378  000B                     	;# 
   379  000C                     	;# 
   380  000D                     	;# 
   381  000E                     	;# 
   382  000E                     	;# 
   383  000F                     	;# 
   384  0010                     	;# 
   385  0011                     	;# 
   386  0012                     	;# 
   387  0013                     	;# 
   388  0014                     	;# 
   389  0015                     	;# 
   390  0015                     	;# 
   391  0016                     	;# 
   392  0017                     	;# 
   393  0018                     	;# 
   394  0019                     	;# 
   395  001A                     	;# 
   396  001B                     	;# 
   397  001B                     	;# 
   398  001C                     	;# 
   399  001D                     	;# 
   400  001E                     	;# 
   401  001F                     	;# 
   402  0081                     	;# 
   403  0085                     	;# 
   404  0086                     	;# 
   405  0087                     	;# 
   406  0088                     	;# 
   407  0089                     	;# 
   408  008C                     	;# 
   409  008D                     	;# 
   410  008E                     	;# 
   411  008F                     	;# 
   412  0090                     	;# 
   413  0091                     	;# 
   414  0092                     	;# 
   415  0093                     	;# 
   416  0093                     	;# 
   417  0093                     	;# 
   418  0094                     	;# 
   419  0095                     	;# 
   420  0096                     	;# 
   421  0097                     	;# 
   422  0098                     	;# 
   423  0099                     	;# 
   424  009A                     	;# 
   425  009B                     	;# 
   426  009C                     	;# 
   427  009D                     	;# 
   428  009E                     	;# 
   429  009F                     	;# 
   430  0105                     	;# 
   431  0107                     	;# 
   432  0108                     	;# 
   433  0109                     	;# 
   434  010C                     	;# 
   435  010C                     	;# 
   436  010D                     	;# 
   437  010E                     	;# 
   438  010F                     	;# 
   439  0185                     	;# 
   440  0187                     	;# 
   441  0188                     	;# 
   442  0189                     	;# 
   443  018C                     	;# 
   444  018D                     	;# 
   445  001E                     _ADRESH	set	30
   446  000B                     _INTCONbits	set	11
   447  0014                     _SSPCON	set	20
   448  0008                     _PORTD	set	8
   449  0005                     _PORTA	set	5
   450  0006                     _PORTB	set	6
   451  0013                     _SSPBUF	set	19
   452  0014                     _SSPCONbits	set	20
   453  001F                     _ADCON0bits	set	31
   454  000C                     _PIR1bits	set	12
   455  009F                     _ADCON1bits	set	159
   456  008F                     _OSCCONbits	set	143
   457  008C                     _PIE1bits	set	140
   458  0091                     _SSPCON2bits	set	145
   459  0087                     _TRISCbits	set	135
   460  0094                     _SSPSTAT	set	148
   461  0093                     _SSPADD	set	147
   462  0091                     _SSPCON2	set	145
   463  0086                     _TRISB	set	134
   464  0088                     _TRISD	set	136
   465  0085                     _TRISA	set	133
   466  0094                     _SSPSTATbits	set	148
   467  009E                     _ADRESL	set	158
   468  043C                     _TRISC4	set	1084
   469  043B                     _TRISC3	set	1083
   470  0189                     _ANSELH	set	393
   471  0188                     _ANSEL	set	392
   472                           
   473                           	psect	cinit
   474  000F                     start_initialization:	
   475                           ; #config settings
   476                           
   477  000F                     __initialization:
   478                           
   479                           ; Clear objects allocated to COMMON
   480  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   481  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   482  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   483  0012                     end_of_initialization:	
   484                           ;End of C runtime variable initialization code
   485                           
   486  0012                     __end_of__initialization:
   487  0012  0183               	clrf	3
   488  0013  120A  118A  2963   	ljmp	_main	;jump to C main() function
   489                           
   490                           	psect	bssCOMMON
   491  0077                     __pbssCOMMON:
   492  0077                     _temp_data:
   493  0077                     	ds	2
   494  0079                     _valor:
   495  0079                     	ds	1
   496                           
   497                           	psect	cstackCOMMON
   498  0070                     __pcstackCOMMON:
   499  0070                     ?_int_osc_MHz:
   500  0070                     ?_setup:	
   501                           ; 1 bytes @ 0x0
   502                           
   503  0070                     ?_adc_start:	
   504                           ; 1 bytes @ 0x0
   505                           
   506  0070                     ?_I2C_Slave_Init:	
   507                           ; 1 bytes @ 0x0
   508                           
   509  0070                     ?_isr:	
   510                           ; 1 bytes @ 0x0
   511                           
   512  0070                     ??_isr:	
   513                           ; 1 bytes @ 0x0
   514                           
   515  0070                     ?_main:	
   516                           ; 1 bytes @ 0x0
   517                           
   518                           
   519                           ; 1 bytes @ 0x0
   520  0070                     	ds	4
   521  0074                     ??_int_osc_MHz:
   522  0074                     ?_adc_init:	
   523                           ; 1 bytes @ 0x4
   524                           
   525  0074                     ??_adc_start:	
   526                           ; 1 bytes @ 0x4
   527                           
   528  0074                     ??_I2C_Slave_Init:	
   529                           ; 1 bytes @ 0x4
   530                           
   531  0074                     I2C_Slave_Init@address:	
   532                           ; 1 bytes @ 0x4
   533                           
   534  0074                     adc_init@vref_plus:	
   535                           ; 1 bytes @ 0x4
   536                           
   537                           
   538                           ; 1 bytes @ 0x4
   539  0074                     	ds	1
   540  0075                     ??_setup:
   541  0075                     adc_init@vref_minus:	
   542                           ; 1 bytes @ 0x5
   543                           
   544  0075                     adc_start@channel:	
   545                           ; 1 bytes @ 0x5
   546                           
   547                           
   548                           ; 1 bytes @ 0x5
   549  0075                     	ds	1
   550  0076                     int_osc_MHz@freq:
   551  0076                     adc_init@adc_cs:	
   552                           ; 1 bytes @ 0x6
   553                           
   554                           
   555                           ; 1 bytes @ 0x6
   556  0076                     	ds	1
   557  0077                     ??_main:
   558                           
   559                           	psect	cstackBANK0
   560  0020                     __pcstackBANK0:	
   561                           ; 1 bytes @ 0x7
   562                           
   563  0020                     ??_adc_init:
   564                           
   565                           ; 1 bytes @ 0x0
   566  0020                     	ds	2
   567                           
   568                           	psect	maintext
   569  0163                     __pmaintext:	
   570 ;;
   571 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   572 ;;
   573 ;; *************** function _main *****************
   574 ;; Defined at:
   575 ;;		line 86 in file "LAB04_2S.c"
   576 ;; Parameters:    Size  Location     Type
   577 ;;		None
   578 ;; Auto vars:     Size  Location     Type
   579 ;;		None
   580 ;; Return value:  Size  Location     Type
   581 ;;                  1    wreg      void 
   582 ;; Registers used:
   583 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   584 ;; Tracked objects:
   585 ;;		On entry : B00/0
   586 ;;		On exit  : 0/0
   587 ;;		Unchanged: 0/0
   588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   589 ;;      Params:         0       0       0       0       0
   590 ;;      Locals:         0       0       0       0       0
   591 ;;      Temps:          0       0       0       0       0
   592 ;;      Totals:         0       0       0       0       0
   593 ;;Total ram usage:        0 bytes
   594 ;; Hardware stack levels required when called: 3
   595 ;; This function calls:
   596 ;;		_adc_init
   597 ;;		_adc_start
   598 ;;		_int_osc_MHz
   599 ;;		_setup
   600 ;; This function is called by:
   601 ;;		Startup code after reset
   602 ;; This function uses a non-reentrant model
   603 ;;
   604                           
   605  0163                     _main:	
   606                           ;psect for function _main
   607                           
   608  0163                     l1197:	
   609                           ;incstack = 0
   610                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   611                           
   612                           
   613                           ;LAB04_2S.c: 87:     int_osc_MHz(8);
   614  0163  3008               	movlw	8
   615  0164  120A  118A  210B  120A  118A  	fcall	_int_osc_MHz
   616                           
   617                           ;LAB04_2S.c: 88:     adc_init(0, 0, 0);
   618  0169  01F4               	clrf	adc_init@vref_plus
   619  016A  01F5               	clrf	adc_init@vref_minus
   620  016B  3000               	movlw	0
   621  016C  120A  118A  2097  120A  118A  	fcall	_adc_init
   622  0171                     l1199:
   623                           
   624                           ;LAB04_2S.c: 89:     setup();
   625  0171  120A  118A  2144  120A  118A  	fcall	_setup
   626  0176                     l1201:
   627                           
   628                           ;LAB04_2S.c: 91:         adc_start(0);
   629  0176  3000               	movlw	0
   630  0177  120A  118A  219A  120A  118A  	fcall	_adc_start
   631  017C  2976               	goto	l1201
   632  017D  120A  118A  280C   	ljmp	start
   633  0180                     __end_of_main:
   634                           
   635                           	psect	text1
   636  0144                     __ptext1:	
   637 ;; *************** function _setup *****************
   638 ;; Defined at:
   639 ;;		line 99 in file "LAB04_2S.c"
   640 ;; Parameters:    Size  Location     Type
   641 ;;		None
   642 ;; Auto vars:     Size  Location     Type
   643 ;;		None
   644 ;; Return value:  Size  Location     Type
   645 ;;                  1    wreg      void 
   646 ;; Registers used:
   647 ;;		wreg, status,2, status,0, pclath, cstack
   648 ;; Tracked objects:
   649 ;;		On entry : 0/0
   650 ;;		On exit  : 0/0
   651 ;;		Unchanged: 0/0
   652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   653 ;;      Params:         0       0       0       0       0
   654 ;;      Locals:         0       0       0       0       0
   655 ;;      Temps:          0       0       0       0       0
   656 ;;      Totals:         0       0       0       0       0
   657 ;;Total ram usage:        0 bytes
   658 ;; Hardware stack levels used: 1
   659 ;; Hardware stack levels required when called: 2
   660 ;; This function calls:
   661 ;;		_I2C_Slave_Init
   662 ;; This function is called by:
   663 ;;		_main
   664 ;; This function uses a non-reentrant model
   665 ;;
   666                           
   667  0144                     _setup:	
   668                           ;psect for function _setup
   669                           
   670  0144                     l843:	
   671                           ;incstack = 0
   672                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   673                           
   674                           
   675                           ;LAB04_2S.c: 101:     ANSEL = 0b00000001;
   676  0144  3001               	movlw	1
   677  0145  1683               	bsf	3,5	;RP0=1, select bank3
   678  0146  1703               	bsf	3,6	;RP1=1, select bank3
   679  0147  0088               	movwf	8	;volatile
   680  0148                     l845:
   681                           
   682                           ;LAB04_2S.c: 102:     ANSELH = 0b00000000;
   683  0148  0189               	clrf	9	;volatile
   684  0149                     l847:
   685                           
   686                           ;LAB04_2S.c: 103:     TRISA = 0b00000001;
   687  0149  3001               	movlw	1
   688  014A  1683               	bsf	3,5	;RP0=1, select bank1
   689  014B  1303               	bcf	3,6	;RP1=0, select bank1
   690  014C  0085               	movwf	5	;volatile
   691                           
   692                           ;LAB04_2S.c: 104:     PORTA = 0b00000000;
   693  014D  1283               	bcf	3,5	;RP0=0, select bank0
   694  014E  1303               	bcf	3,6	;RP1=0, select bank0
   695  014F  0185               	clrf	5	;volatile
   696                           
   697                           ;LAB04_2S.c: 105:     TRISD = 0b00000000;
   698  0150  1683               	bsf	3,5	;RP0=1, select bank1
   699  0151  1303               	bcf	3,6	;RP1=0, select bank1
   700  0152  0188               	clrf	8	;volatile
   701                           
   702                           ;LAB04_2S.c: 106:     PORTD = 0b00000000;
   703  0153  1283               	bcf	3,5	;RP0=0, select bank0
   704  0154  1303               	bcf	3,6	;RP1=0, select bank0
   705  0155  0188               	clrf	8	;volatile
   706                           
   707                           ;LAB04_2S.c: 107:     TRISB = 0b00000000;
   708  0156  1683               	bsf	3,5	;RP0=1, select bank1
   709  0157  1303               	bcf	3,6	;RP1=0, select bank1
   710  0158  0186               	clrf	6	;volatile
   711                           
   712                           ;LAB04_2S.c: 108:     PORTB = 0b00000000;
   713  0159  1283               	bcf	3,5	;RP0=0, select bank0
   714  015A  1303               	bcf	3,6	;RP1=0, select bank0
   715  015B  0186               	clrf	6	;volatile
   716  015C                     l849:
   717                           
   718                           ;LAB04_2S.c: 109:     I2C_Slave_Init(0x50);
   719  015C  3050               	movlw	80
   720  015D  120A  118A  2180  120A  118A  	fcall	_I2C_Slave_Init
   721  0162                     l75:
   722  0162  0008               	return
   723  0163                     __end_of_setup:
   724                           
   725                           	psect	text2
   726  0180                     __ptext2:	
   727 ;; *************** function _I2C_Slave_Init *****************
   728 ;; Defined at:
   729 ;;		line 70 in file "I2C.c"
   730 ;; Parameters:    Size  Location     Type
   731 ;;  address         1    wreg     unsigned char 
   732 ;; Auto vars:     Size  Location     Type
   733 ;;  address         1    4[COMMON] unsigned char 
   734 ;; Return value:  Size  Location     Type
   735 ;;                  1    wreg      void 
   736 ;; Registers used:
   737 ;;		wreg
   738 ;; Tracked objects:
   739 ;;		On entry : 0/0
   740 ;;		On exit  : 0/0
   741 ;;		Unchanged: 0/0
   742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   743 ;;      Params:         0       0       0       0       0
   744 ;;      Locals:         1       0       0       0       0
   745 ;;      Temps:          0       0       0       0       0
   746 ;;      Totals:         1       0       0       0       0
   747 ;;Total ram usage:        1 bytes
   748 ;; Hardware stack levels used: 1
   749 ;; Hardware stack levels required when called: 1
   750 ;; This function calls:
   751 ;;		Nothing
   752 ;; This function is called by:
   753 ;;		_setup
   754 ;; This function uses a non-reentrant model
   755 ;;
   756                           
   757  0180                     _I2C_Slave_Init:	
   758                           ;psect for function _I2C_Slave_Init
   759                           
   760                           
   761                           ;incstack = 0
   762                           ; Regs used in _I2C_Slave_Init: [wreg]
   763                           ;I2C_Slave_Init@address stored from wreg
   764  0180  00F4               	movwf	I2C_Slave_Init@address
   765  0181                     l773:
   766                           
   767                           ;I2C.c: 70: void I2C_Slave_Init(uint8_t address);I2C.c: 71: {;I2C.c: 72:     SSPADD = ad
      +                          dress;
   768  0181  0874               	movf	I2C_Slave_Init@address,w
   769  0182  1683               	bsf	3,5	;RP0=1, select bank1
   770  0183  1303               	bcf	3,6	;RP1=0, select bank1
   771  0184  0093               	movwf	19	;volatile
   772                           
   773                           ;I2C.c: 73:     SSPCON = 0x36;
   774  0185  3036               	movlw	54
   775  0186  1283               	bcf	3,5	;RP0=0, select bank0
   776  0187  1303               	bcf	3,6	;RP1=0, select bank0
   777  0188  0094               	movwf	20	;volatile
   778                           
   779                           ;I2C.c: 74:     SSPSTAT = 0x80;
   780  0189  3080               	movlw	128
   781  018A  1683               	bsf	3,5	;RP0=1, select bank1
   782  018B  1303               	bcf	3,6	;RP1=0, select bank1
   783  018C  0094               	movwf	20	;volatile
   784                           
   785                           ;I2C.c: 75:     SSPCON2 = 0x01;
   786  018D  3001               	movlw	1
   787  018E  0091               	movwf	17	;volatile
   788  018F                     l775:
   789                           
   790                           ;I2C.c: 76:     TRISC3 = 1;
   791  018F  1587               	bsf	7,3	;volatile
   792  0190                     l777:
   793                           
   794                           ;I2C.c: 77:     TRISC4 = 1;
   795  0190  1607               	bsf	7,4	;volatile
   796  0191                     l779:
   797                           
   798                           ;I2C.c: 78:     PIR1bits.SSPIF = 0;
   799  0191  1283               	bcf	3,5	;RP0=0, select bank0
   800  0192  1303               	bcf	3,6	;RP1=0, select bank0
   801  0193  118C               	bcf	12,3	;volatile
   802  0194                     l781:
   803                           
   804                           ;I2C.c: 79:     PIE1bits.SSPIE = 1;
   805  0194  1683               	bsf	3,5	;RP0=1, select bank1
   806  0195  1303               	bcf	3,6	;RP1=0, select bank1
   807  0196  158C               	bsf	12,3	;volatile
   808  0197                     l783:
   809                           
   810                           ;I2C.c: 80:     INTCONbits.PEIE = 1;
   811  0197  170B               	bsf	11,6	;volatile
   812  0198                     l785:
   813                           
   814                           ;I2C.c: 81:     INTCONbits.GIE = 1;
   815  0198  178B               	bsf	11,7	;volatile
   816  0199                     l128:
   817  0199  0008               	return
   818  019A                     __end_of_I2C_Slave_Init:
   819                           
   820                           	psect	text3
   821  010B                     __ptext3:	
   822 ;; *************** function _int_osc_MHz *****************
   823 ;; Defined at:
   824 ;;		line 11 in file "oscilador.c"
   825 ;; Parameters:    Size  Location     Type
   826 ;;  freq            1    wreg     unsigned char 
   827 ;; Auto vars:     Size  Location     Type
   828 ;;  freq            1    6[COMMON] unsigned char 
   829 ;; Return value:  Size  Location     Type
   830 ;;                  1    wreg      void 
   831 ;; Registers used:
   832 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   833 ;; Tracked objects:
   834 ;;		On entry : 0/0
   835 ;;		On exit  : 0/0
   836 ;;		Unchanged: 0/0
   837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   838 ;;      Params:         0       0       0       0       0
   839 ;;      Locals:         1       0       0       0       0
   840 ;;      Temps:          2       0       0       0       0
   841 ;;      Totals:         3       0       0       0       0
   842 ;;Total ram usage:        3 bytes
   843 ;; Hardware stack levels used: 1
   844 ;; Hardware stack levels required when called: 1
   845 ;; This function calls:
   846 ;;		Nothing
   847 ;; This function is called by:
   848 ;;		_main
   849 ;; This function uses a non-reentrant model
   850 ;;
   851                           
   852  010B                     _int_osc_MHz:	
   853                           ;psect for function _int_osc_MHz
   854                           
   855                           
   856                           ;incstack = 0
   857                           ; Regs used in _int_osc_MHz: [wreg-fsr0h+status,2+status,0]
   858                           ;int_osc_MHz@freq stored from wreg
   859  010B  00F6               	movwf	int_osc_MHz@freq
   860  010C                     l787:
   861                           
   862                           ;oscilador.c: 12:     switch(freq){
   863  010C  292C               	goto	l801
   864  010D                     l789:
   865                           
   866                           ;oscilador.c: 14:             OSCCONbits.IRCF = 0b100;
   867  010D  1683               	bsf	3,5	;RP0=1, select bank1
   868  010E  1303               	bcf	3,6	;RP1=0, select bank1
   869  010F  080F               	movf	15,w	;volatile
   870  0110  398F               	andlw	-113
   871  0111  3840               	iorlw	64
   872  0112  008F               	movwf	15	;volatile
   873                           
   874                           ;oscilador.c: 15:             break;
   875  0113  2942               	goto	l135
   876  0114                     l791:
   877                           
   878                           ;oscilador.c: 17:             OSCCONbits.IRCF = 0b101;
   879  0114  1683               	bsf	3,5	;RP0=1, select bank1
   880  0115  1303               	bcf	3,6	;RP1=0, select bank1
   881  0116  080F               	movf	15,w	;volatile
   882  0117  398F               	andlw	-113
   883  0118  3850               	iorlw	80
   884  0119  008F               	movwf	15	;volatile
   885                           
   886                           ;oscilador.c: 18:             break;
   887  011A  2942               	goto	l135
   888  011B                     l793:
   889                           
   890                           ;oscilador.c: 20:             OSCCONbits.IRCF = 0b110;
   891  011B  1683               	bsf	3,5	;RP0=1, select bank1
   892  011C  1303               	bcf	3,6	;RP1=0, select bank1
   893  011D  080F               	movf	15,w	;volatile
   894  011E  398F               	andlw	-113
   895  011F  3860               	iorlw	96
   896  0120  008F               	movwf	15	;volatile
   897                           
   898                           ;oscilador.c: 21:             break;
   899  0121  2942               	goto	l135
   900  0122                     l795:
   901                           
   902                           ;oscilador.c: 23:             OSCCONbits.IRCF = 0b111;
   903  0122  3070               	movlw	112
   904  0123  1683               	bsf	3,5	;RP0=1, select bank1
   905  0124  1303               	bcf	3,6	;RP1=0, select bank1
   906  0125  048F               	iorwf	15,f	;volatile
   907                           
   908                           ;oscilador.c: 24:             break;
   909  0126  2942               	goto	l135
   910  0127                     l797:
   911                           
   912                           ;oscilador.c: 26:             OSCCONbits.IRCF = 0b111;
   913  0127  3070               	movlw	112
   914  0128  1683               	bsf	3,5	;RP0=1, select bank1
   915  0129  1303               	bcf	3,6	;RP1=0, select bank1
   916  012A  048F               	iorwf	15,f	;volatile
   917                           
   918                           ;oscilador.c: 27:             break;
   919  012B  2942               	goto	l135
   920  012C                     l801:
   921  012C  0876               	movf	int_osc_MHz@freq,w
   922  012D  00F4               	movwf	??_int_osc_MHz
   923  012E  01F5               	clrf	??_int_osc_MHz+1
   924                           
   925                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   926                           ; Switch size 1, requested type "simple"
   927                           ; Number of cases is 1, Range of values is 0 to 0
   928                           ; switch strategies available:
   929                           ; Name         Instructions Cycles
   930                           ; simple_byte            4     3 (average)
   931                           ; direct_byte           11     8 (fixed)
   932                           ; jumptable            260     6 (fixed)
   933                           ;	Chosen strategy is simple_byte
   934  012F  0875               	movf	??_int_osc_MHz+1,w
   935  0130  3A00               	xorlw	0	; case 0
   936  0131  1903               	skipnz
   937  0132  2934               	goto	l1283
   938  0133  2927               	goto	l797
   939  0134                     l1283:
   940                           
   941                           ; Switch size 1, requested type "simple"
   942                           ; Number of cases is 4, Range of values is 1 to 8
   943                           ; switch strategies available:
   944                           ; Name         Instructions Cycles
   945                           ; simple_byte           13     7 (average)
   946                           ; direct_byte           35    11 (fixed)
   947                           ; jumptable            263     9 (fixed)
   948                           ;	Chosen strategy is simple_byte
   949  0134  0874               	movf	??_int_osc_MHz,w
   950  0135  3A01               	xorlw	1	; case 1
   951  0136  1903               	skipnz
   952  0137  290D               	goto	l789
   953  0138  3A03               	xorlw	3	; case 2
   954  0139  1903               	skipnz
   955  013A  2914               	goto	l791
   956  013B  3A06               	xorlw	6	; case 4
   957  013C  1903               	skipnz
   958  013D  291B               	goto	l793
   959  013E  3A0C               	xorlw	12	; case 8
   960  013F  1903               	skipnz
   961  0140  2922               	goto	l795
   962  0141  2927               	goto	l797
   963  0142                     l135:
   964                           
   965                           ;oscilador.c: 29:     OSCCONbits.SCS = 1;
   966  0142  140F               	bsf	15,0	;volatile
   967  0143                     l140:
   968  0143  0008               	return
   969  0144                     __end_of_int_osc_MHz:
   970                           
   971                           	psect	text4
   972  019A                     __ptext4:	
   973 ;; *************** function _adc_start *****************
   974 ;; Defined at:
   975 ;;		line 60 in file "adc.c"
   976 ;; Parameters:    Size  Location     Type
   977 ;;  channel         1    wreg     unsigned char 
   978 ;; Auto vars:     Size  Location     Type
   979 ;;  channel         1    5[COMMON] unsigned char 
   980 ;; Return value:  Size  Location     Type
   981 ;;                  1    wreg      void 
   982 ;; Registers used:
   983 ;;		wreg, status,2, status,0
   984 ;; Tracked objects:
   985 ;;		On entry : 0/0
   986 ;;		On exit  : 0/0
   987 ;;		Unchanged: 0/0
   988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   989 ;;      Params:         0       0       0       0       0
   990 ;;      Locals:         1       0       0       0       0
   991 ;;      Temps:          1       0       0       0       0
   992 ;;      Totals:         2       0       0       0       0
   993 ;;Total ram usage:        2 bytes
   994 ;; Hardware stack levels used: 1
   995 ;; Hardware stack levels required when called: 1
   996 ;; This function calls:
   997 ;;		Nothing
   998 ;; This function is called by:
   999 ;;		_main
  1000 ;; This function uses a non-reentrant model
  1001 ;;
  1002                           
  1003  019A                     _adc_start:	
  1004                           ;psect for function _adc_start
  1005                           
  1006                           
  1007                           ;incstack = 0
  1008                           ; Regs used in _adc_start: [wreg+status,2+status,0]
  1009                           ;adc_start@channel stored from wreg
  1010  019A  00F5               	movwf	adc_start@channel
  1011  019B                     l853:
  1012                           
  1013                           ;adc.c: 61:     if(ADCON0bits.GO == 0){
  1014  019B  1283               	bcf	3,5	;RP0=0, select bank0
  1015  019C  1303               	bcf	3,6	;RP1=0, select bank0
  1016  019D  189F               	btfsc	31,1	;volatile
  1017  019E  29A0               	goto	u11
  1018  019F  29A1               	goto	u10
  1019  01A0                     u11:
  1020  01A0  29B1               	goto	l178
  1021  01A1                     u10:
  1022  01A1                     l855:
  1023                           
  1024                           ;adc.c: 62:         ADCON0bits.CHS = channel;
  1025  01A1  0875               	movf	adc_start@channel,w
  1026  01A2  00F4               	movwf	??_adc_start
  1027  01A3  0DF4               	rlf	??_adc_start,f
  1028  01A4  0DF4               	rlf	??_adc_start,f
  1029  01A5  081F               	movf	31,w	;volatile
  1030  01A6  0674               	xorwf	??_adc_start,w
  1031  01A7  39C3               	andlw	-61
  1032  01A8  0674               	xorwf	??_adc_start,w
  1033  01A9  009F               	movwf	31	;volatile
  1034  01AA                     l857:
  1035                           
  1036                           ;adc.c: 63:         _delay((unsigned long)((40)*(1000000/4000000.0)));
  1037  01AA  3003               	movlw	3
  1038  01AB  00F4               	movwf	??_adc_start
  1039  01AC                     u177:
  1040  01AC  0BF4               	decfsz	??_adc_start,f
  1041  01AD  29AC               	goto	u177
  1042  01AE                     l859:
  1043                           
  1044                           ;adc.c: 64:         ADCON0bits.GO = 1;
  1045  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  1046  01AF  1303               	bcf	3,6	;RP1=0, select bank0
  1047  01B0  149F               	bsf	31,1	;volatile
  1048  01B1                     l178:
  1049  01B1  0008               	return
  1050  01B2                     __end_of_adc_start:
  1051                           
  1052                           	psect	text5
  1053  0097                     __ptext5:	
  1054 ;; *************** function _adc_init *****************
  1055 ;; Defined at:
  1056 ;;		line 15 in file "adc.c"
  1057 ;; Parameters:    Size  Location     Type
  1058 ;;  adc_cs          1    wreg     unsigned char 
  1059 ;;  vref_plus       1    4[COMMON] unsigned char 
  1060 ;;  vref_minus      1    5[COMMON] unsigned char 
  1061 ;; Auto vars:     Size  Location     Type
  1062 ;;  adc_cs          1    6[COMMON] unsigned char 
  1063 ;; Return value:  Size  Location     Type
  1064 ;;                  1    wreg      void 
  1065 ;; Registers used:
  1066 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1067 ;; Tracked objects:
  1068 ;;		On entry : 0/0
  1069 ;;		On exit  : 0/0
  1070 ;;		Unchanged: 0/0
  1071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1072 ;;      Params:         2       0       0       0       0
  1073 ;;      Locals:         1       0       0       0       0
  1074 ;;      Temps:          0       2       0       0       0
  1075 ;;      Totals:         3       2       0       0       0
  1076 ;;Total ram usage:        5 bytes
  1077 ;; Hardware stack levels used: 1
  1078 ;; Hardware stack levels required when called: 1
  1079 ;; This function calls:
  1080 ;;		Nothing
  1081 ;; This function is called by:
  1082 ;;		_main
  1083 ;; This function uses a non-reentrant model
  1084 ;;
  1085                           
  1086  0097                     _adc_init:	
  1087                           ;psect for function _adc_init
  1088                           
  1089                           
  1090                           ;incstack = 0
  1091                           ; Regs used in _adc_init: [wreg-fsr0h+status,2+status,0]
  1092                           ;adc_init@adc_cs stored from wreg
  1093  0097  00F6               	movwf	adc_init@adc_cs
  1094  0098                     l1161:
  1095                           
  1096                           ;adc.c: 16:     switch(adc_cs){
  1097  0098  28AE               	goto	l1175
  1098  0099                     l1163:
  1099                           
  1100                           ;adc.c: 18:             ADCON0bits.ADCS = 0b00;
  1101  0099  303F               	movlw	-193
  1102  009A  059F               	andwf	31,f	;volatile
  1103                           
  1104                           ;adc.c: 19:             break;
  1105  009B  28D2               	goto	l1179
  1106  009C                     l1165:
  1107                           
  1108                           ;adc.c: 21:             ADCON0bits.ADCS = 0b01;
  1109  009C  081F               	movf	31,w	;volatile
  1110  009D  393F               	andlw	-193
  1111  009E  3840               	iorlw	64
  1112  009F  009F               	movwf	31	;volatile
  1113                           
  1114                           ;adc.c: 22:             break;
  1115  00A0  28D2               	goto	l1179
  1116  00A1                     l1167:
  1117                           
  1118                           ;adc.c: 24:             ADCON0bits.ADCS = 0b10;
  1119  00A1  081F               	movf	31,w	;volatile
  1120  00A2  393F               	andlw	-193
  1121  00A3  3880               	iorlw	128
  1122  00A4  009F               	movwf	31	;volatile
  1123                           
  1124                           ;adc.c: 25:             break;
  1125  00A5  28D2               	goto	l1179
  1126  00A6                     l1169:
  1127                           
  1128                           ;adc.c: 27:             ADCON0bits.ADCS = 0b11;
  1129  00A6  30C0               	movlw	192
  1130  00A7  049F               	iorwf	31,f	;volatile
  1131                           
  1132                           ;adc.c: 28:             break;
  1133  00A8  28D2               	goto	l1179
  1134  00A9                     l1171:
  1135                           
  1136                           ;adc.c: 30:             ADCON0bits.ADCS = 0b01;
  1137  00A9  081F               	movf	31,w	;volatile
  1138  00AA  393F               	andlw	-193
  1139  00AB  3840               	iorlw	64
  1140  00AC  009F               	movwf	31	;volatile
  1141                           
  1142                           ;adc.c: 31:             break;
  1143  00AD  28D2               	goto	l1179
  1144  00AE                     l1175:
  1145  00AE  0876               	movf	adc_init@adc_cs,w
  1146  00AF  1283               	bcf	3,5	;RP0=0, select bank0
  1147  00B0  1303               	bcf	3,6	;RP1=0, select bank0
  1148  00B1  00A0               	movwf	??_adc_init
  1149  00B2  01A1               	clrf	??_adc_init+1
  1150                           
  1151                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1152                           ; Switch size 1, requested type "simple"
  1153                           ; Number of cases is 1, Range of values is 0 to 0
  1154                           ; switch strategies available:
  1155                           ; Name         Instructions Cycles
  1156                           ; simple_byte            4     3 (average)
  1157                           ; direct_byte           11     8 (fixed)
  1158                           ; jumptable            260     6 (fixed)
  1159                           ;	Chosen strategy is simple_byte
  1160  00B3  0821               	movf	??_adc_init+1,w
  1161  00B4  3A00               	xorlw	0	; case 0
  1162  00B5  1903               	skipnz
  1163  00B6  28B8               	goto	l1285
  1164  00B7  28A9               	goto	l1171
  1165  00B8                     l1285:
  1166                           
  1167                           ; Switch size 1, requested type "simple"
  1168                           ; Number of cases is 4, Range of values is 0 to 3
  1169                           ; switch strategies available:
  1170                           ; Name         Instructions Cycles
  1171                           ; simple_byte           13     7 (average)
  1172                           ; direct_byte           20     8 (fixed)
  1173                           ; jumptable            260     6 (fixed)
  1174                           ;	Chosen strategy is simple_byte
  1175  00B8  0820               	movf	??_adc_init,w
  1176  00B9  3A00               	xorlw	0	; case 0
  1177  00BA  1903               	skipnz
  1178  00BB  2899               	goto	l1163
  1179  00BC  3A01               	xorlw	1	; case 1
  1180  00BD  1903               	skipnz
  1181  00BE  289C               	goto	l1165
  1182  00BF  3A03               	xorlw	3	; case 2
  1183  00C0  1903               	skipnz
  1184  00C1  28A1               	goto	l1167
  1185  00C2  3A01               	xorlw	1	; case 3
  1186  00C3  1903               	skipnz
  1187  00C4  28A6               	goto	l1169
  1188  00C5  28A9               	goto	l1171
  1189  00C6                     l165:	
  1190                           ;adc.c: 34:         case 0:
  1191                           
  1192                           
  1193                           ;adc.c: 35:             ADCON1bits.VCFG0 = 0;
  1194  00C6  1683               	bsf	3,5	;RP0=1, select bank1
  1195  00C7  1303               	bcf	3,6	;RP1=0, select bank1
  1196  00C8  121F               	bcf	31,4	;volatile
  1197                           
  1198                           ;adc.c: 36:             break;
  1199  00C9  28EE               	goto	l1183
  1200  00CA                     l167:	
  1201                           ;adc.c: 37:         case 1:
  1202                           
  1203                           
  1204                           ;adc.c: 38:             ADCON1bits.VCFG0 = 1;
  1205  00CA  1683               	bsf	3,5	;RP0=1, select bank1
  1206  00CB  1303               	bcf	3,6	;RP1=0, select bank1
  1207  00CC  161F               	bsf	31,4	;volatile
  1208                           
  1209                           ;adc.c: 39:             break;
  1210  00CD  28EE               	goto	l1183
  1211  00CE                     l168:	
  1212                           ;adc.c: 40:         default:
  1213                           
  1214                           
  1215                           ;adc.c: 41:             ADCON1bits.VCFG0 = 0;
  1216  00CE  1683               	bsf	3,5	;RP0=1, select bank1
  1217  00CF  1303               	bcf	3,6	;RP1=0, select bank1
  1218  00D0  121F               	bcf	31,4	;volatile
  1219                           
  1220                           ;adc.c: 42:             break;
  1221  00D1  28EE               	goto	l1183
  1222  00D2                     l1179:
  1223  00D2  0874               	movf	adc_init@vref_plus,w
  1224  00D3  00A0               	movwf	??_adc_init
  1225  00D4  01A1               	clrf	??_adc_init+1
  1226                           
  1227                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1228                           ; Switch size 1, requested type "simple"
  1229                           ; Number of cases is 1, Range of values is 0 to 0
  1230                           ; switch strategies available:
  1231                           ; Name         Instructions Cycles
  1232                           ; simple_byte            4     3 (average)
  1233                           ; direct_byte           11     8 (fixed)
  1234                           ; jumptable            260     6 (fixed)
  1235                           ;	Chosen strategy is simple_byte
  1236  00D5  0821               	movf	??_adc_init+1,w
  1237  00D6  3A00               	xorlw	0	; case 0
  1238  00D7  1903               	skipnz
  1239  00D8  28DA               	goto	l1287
  1240  00D9  28CE               	goto	l168
  1241  00DA                     l1287:
  1242                           
  1243                           ; Switch size 1, requested type "simple"
  1244                           ; Number of cases is 2, Range of values is 0 to 1
  1245                           ; switch strategies available:
  1246                           ; Name         Instructions Cycles
  1247                           ; simple_byte            7     4 (average)
  1248                           ; direct_byte           14     8 (fixed)
  1249                           ; jumptable            260     6 (fixed)
  1250                           ;	Chosen strategy is simple_byte
  1251  00DA  0820               	movf	??_adc_init,w
  1252  00DB  3A00               	xorlw	0	; case 0
  1253  00DC  1903               	skipnz
  1254  00DD  28C6               	goto	l165
  1255  00DE  3A01               	xorlw	1	; case 1
  1256  00DF  1903               	skipnz
  1257  00E0  28CA               	goto	l167
  1258  00E1  28CE               	goto	l168
  1259  00E2                     l170:	
  1260                           ;adc.c: 45:         case 0:
  1261                           
  1262                           
  1263                           ;adc.c: 46:             ADCON1bits.VCFG1 = 0;
  1264  00E2  1683               	bsf	3,5	;RP0=1, select bank1
  1265  00E3  1303               	bcf	3,6	;RP1=0, select bank1
  1266  00E4  129F               	bcf	31,5	;volatile
  1267                           
  1268                           ;adc.c: 47:             break;
  1269  00E5  2900               	goto	l171
  1270  00E6                     l172:	
  1271                           ;adc.c: 48:         case 1:
  1272                           
  1273                           
  1274                           ;adc.c: 49:             ADCON1bits.VCFG1 = 1;
  1275  00E6  1683               	bsf	3,5	;RP0=1, select bank1
  1276  00E7  1303               	bcf	3,6	;RP1=0, select bank1
  1277  00E8  169F               	bsf	31,5	;volatile
  1278                           
  1279                           ;adc.c: 50:             break;
  1280  00E9  2900               	goto	l171
  1281  00EA                     l173:	
  1282                           ;adc.c: 51:         default:
  1283                           
  1284                           
  1285                           ;adc.c: 52:             ADCON1bits.VCFG1 = 0;
  1286  00EA  1683               	bsf	3,5	;RP0=1, select bank1
  1287  00EB  1303               	bcf	3,6	;RP1=0, select bank1
  1288  00EC  129F               	bcf	31,5	;volatile
  1289                           
  1290                           ;adc.c: 53:             break;
  1291  00ED  2900               	goto	l171
  1292  00EE                     l1183:
  1293  00EE  0875               	movf	adc_init@vref_minus,w
  1294  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  1295  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  1296  00F1  00A0               	movwf	??_adc_init
  1297  00F2  01A1               	clrf	??_adc_init+1
  1298                           
  1299                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1300                           ; Switch size 1, requested type "simple"
  1301                           ; Number of cases is 1, Range of values is 0 to 0
  1302                           ; switch strategies available:
  1303                           ; Name         Instructions Cycles
  1304                           ; simple_byte            4     3 (average)
  1305                           ; direct_byte           11     8 (fixed)
  1306                           ; jumptable            260     6 (fixed)
  1307                           ;	Chosen strategy is simple_byte
  1308  00F3  0821               	movf	??_adc_init+1,w
  1309  00F4  3A00               	xorlw	0	; case 0
  1310  00F5  1903               	skipnz
  1311  00F6  28F8               	goto	l1289
  1312  00F7  28EA               	goto	l173
  1313  00F8                     l1289:
  1314                           
  1315                           ; Switch size 1, requested type "simple"
  1316                           ; Number of cases is 2, Range of values is 0 to 1
  1317                           ; switch strategies available:
  1318                           ; Name         Instructions Cycles
  1319                           ; simple_byte            7     4 (average)
  1320                           ; direct_byte           14     8 (fixed)
  1321                           ; jumptable            260     6 (fixed)
  1322                           ;	Chosen strategy is simple_byte
  1323  00F8  0820               	movf	??_adc_init,w
  1324  00F9  3A00               	xorlw	0	; case 0
  1325  00FA  1903               	skipnz
  1326  00FB  28E2               	goto	l170
  1327  00FC  3A01               	xorlw	1	; case 1
  1328  00FD  1903               	skipnz
  1329  00FE  28E6               	goto	l172
  1330  00FF  28EA               	goto	l173
  1331  0100                     l171:
  1332                           
  1333                           ;adc.c: 55:     ADCON1bits.ADFM = 1;
  1334  0100  179F               	bsf	31,7	;volatile
  1335                           
  1336                           ;adc.c: 56:     ADCON0bits.ADON = 1;
  1337  0101  1283               	bcf	3,5	;RP0=0, select bank0
  1338  0102  1303               	bcf	3,6	;RP1=0, select bank0
  1339  0103  141F               	bsf	31,0	;volatile
  1340                           
  1341                           ;adc.c: 57:     PIE1bits.ADIE = 1;
  1342  0104  1683               	bsf	3,5	;RP0=1, select bank1
  1343  0105  1303               	bcf	3,6	;RP1=0, select bank1
  1344  0106  170C               	bsf	12,6	;volatile
  1345                           
  1346                           ;adc.c: 58:     PIR1bits.ADIF = 0;
  1347  0107  1283               	bcf	3,5	;RP0=0, select bank0
  1348  0108  1303               	bcf	3,6	;RP1=0, select bank0
  1349  0109  130C               	bcf	12,6	;volatile
  1350  010A                     l174:
  1351  010A  0008               	return
  1352  010B                     __end_of_adc_init:
  1353                           
  1354                           	psect	text6
  1355  0016                     __ptext6:	
  1356 ;; *************** function _isr *****************
  1357 ;; Defined at:
  1358 ;;		line 35 in file "LAB04_2S.c"
  1359 ;; Parameters:    Size  Location     Type
  1360 ;;		None
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;		None
  1363 ;; Return value:  Size  Location     Type
  1364 ;;                  1    wreg      void 
  1365 ;; Registers used:
  1366 ;;		wreg, status,2, status,0
  1367 ;; Tracked objects:
  1368 ;;		On entry : 0/0
  1369 ;;		On exit  : 0/0
  1370 ;;		Unchanged: 0/0
  1371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1372 ;;      Params:         0       0       0       0       0
  1373 ;;      Locals:         0       0       0       0       0
  1374 ;;      Temps:          4       0       0       0       0
  1375 ;;      Totals:         4       0       0       0       0
  1376 ;;Total ram usage:        4 bytes
  1377 ;; Hardware stack levels used: 1
  1378 ;; This function calls:
  1379 ;;		Nothing
  1380 ;; This function is called by:
  1381 ;;		Interrupt level 1
  1382 ;; This function uses a non-reentrant model
  1383 ;;
  1384                           
  1385  0016                     _isr:	
  1386                           ;psect for function _isr
  1387                           
  1388  0016                     i1l865:
  1389                           
  1390                           ;LAB04_2S.c: 36:     if(PIR1bits.ADIF == 1){
  1391  0016  1283               	bcf	3,5	;RP0=0, select bank0
  1392  0017  1303               	bcf	3,6	;RP1=0, select bank0
  1393  0018  1F0C               	btfss	12,6	;volatile
  1394  0019  281B               	goto	u4_21
  1395  001A  281C               	goto	u4_20
  1396  001B                     u4_21:
  1397  001B  282D               	goto	i1l873
  1398  001C                     u4_20:
  1399  001C                     i1l867:
  1400                           
  1401                           ;LAB04_2S.c: 37:         if (ADCON0bits.CHS == 0b0000)
  1402  001C  0C1F               	rrf	31,w	;volatile
  1403  001D  00F0               	movwf	??_isr
  1404  001E  0C70               	rrf	??_isr,w
  1405  001F  390F               	andlw	15
  1406  0020  3A00               	xorlw	0
  1407  0021  1D03               	skipz
  1408  0022  2824               	goto	u5_21
  1409  0023  2825               	goto	u5_20
  1410  0024                     u5_21:
  1411  0024  282B               	goto	i1l871
  1412  0025                     u5_20:
  1413  0025                     i1l869:
  1414                           
  1415                           ;LAB04_2S.c: 38:         {;LAB04_2S.c: 39:             valor = ADRESL;
  1416  0025  1683               	bsf	3,5	;RP0=1, select bank1
  1417  0026  1303               	bcf	3,6	;RP1=0, select bank1
  1418  0027  081E               	movf	30,w	;volatile
  1419  0028  00F0               	movwf	??_isr
  1420  0029  0870               	movf	??_isr,w
  1421  002A  00F9               	movwf	_valor
  1422  002B                     i1l871:
  1423                           
  1424                           ;LAB04_2S.c: 41:         PIR1bits.ADIF = 0;
  1425  002B  1283               	bcf	3,5	;RP0=0, select bank0
  1426  002C  130C               	bcf	12,6	;volatile
  1427  002D                     i1l873:
  1428                           
  1429                           ;LAB04_2S.c: 43:     if(PIR1bits.SSPIF == 1){
  1430  002D  1D8C               	btfss	12,3	;volatile
  1431  002E  2830               	goto	u6_21
  1432  002F  2831               	goto	u6_20
  1433  0030                     u6_21:
  1434  0030  2890               	goto	i1l64
  1435  0031                     u6_20:
  1436  0031                     i1l875:
  1437                           
  1438                           ;LAB04_2S.c: 45:         SSPCONbits.CKP = 0;
  1439  0031  1214               	bcf	20,4	;volatile
  1440                           
  1441                           ;LAB04_2S.c: 47:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL))
  1442  0032  1B14               	btfsc	20,6	;volatile
  1443  0033  2835               	goto	u7_21
  1444  0034  2836               	goto	u7_20
  1445  0035                     u7_21:
  1446  0035  283A               	goto	i1l879
  1447  0036                     u7_20:
  1448  0036                     i1l877:
  1449  0036  1F94               	btfss	20,7	;volatile
  1450  0037  2839               	goto	u8_21
  1451  0038  283A               	goto	u8_20
  1452  0039                     u8_21:
  1453  0039  2844               	goto	i1l887
  1454  003A                     u8_20:
  1455  003A                     i1l879:
  1456                           
  1457                           ;LAB04_2S.c: 48:         {;LAB04_2S.c: 49:             temp_data = SSPBUF;
  1458  003A  0813               	movf	19,w	;volatile
  1459  003B  00F0               	movwf	??_isr
  1460  003C  01F1               	clrf	??_isr+1
  1461  003D  0870               	movf	??_isr,w
  1462  003E  00F7               	movwf	_temp_data
  1463  003F  0871               	movf	??_isr+1,w
  1464  0040  00F8               	movwf	_temp_data+1
  1465  0041                     i1l881:
  1466                           
  1467                           ;LAB04_2S.c: 50:             SSPCONbits.SSPOV = 0;
  1468  0041  1314               	bcf	20,6	;volatile
  1469  0042                     i1l883:
  1470                           
  1471                           ;LAB04_2S.c: 51:             SSPCONbits.WCOL = 0;
  1472  0042  1394               	bcf	20,7	;volatile
  1473  0043                     i1l885:
  1474                           
  1475                           ;LAB04_2S.c: 52:             SSPCONbits.CKP = 1;
  1476  0043  1614               	bsf	20,4	;volatile
  1477  0044                     i1l887:
  1478                           
  1479                           ;LAB04_2S.c: 55:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW)
  1480  0044  1683               	bsf	3,5	;RP0=1, select bank1
  1481  0045  1303               	bcf	3,6	;RP1=0, select bank1
  1482  0046  1A94               	btfsc	20,5	;volatile
  1483  0047  2849               	goto	u9_21
  1484  0048  284A               	goto	u9_20
  1485  0049                     u9_21:
  1486  0049  2869               	goto	i1l55
  1487  004A                     u9_20:
  1488  004A                     i1l889:
  1489  004A  1914               	btfsc	20,2	;volatile
  1490  004B  284D               	goto	u10_21
  1491  004C  284E               	goto	u10_20
  1492  004D                     u10_21:
  1493  004D  2869               	goto	i1l55
  1494  004E                     u10_20:
  1495  004E                     i1l891:
  1496                           
  1497                           ;LAB04_2S.c: 56:         {;LAB04_2S.c: 57:             temp_data = SSPBUF;
  1498  004E  1283               	bcf	3,5	;RP0=0, select bank0
  1499  004F  1303               	bcf	3,6	;RP1=0, select bank0
  1500  0050  0813               	movf	19,w	;volatile
  1501  0051  00F0               	movwf	??_isr
  1502  0052  01F1               	clrf	??_isr+1
  1503  0053  0870               	movf	??_isr,w
  1504  0054  00F7               	movwf	_temp_data
  1505  0055  0871               	movf	??_isr+1,w
  1506  0056  00F8               	movwf	_temp_data+1
  1507  0057                     i1l893:
  1508                           
  1509                           ;LAB04_2S.c: 58:             PIR1bits.SSPIF = 0;
  1510  0057  118C               	bcf	12,3	;volatile
  1511  0058                     i1l895:
  1512                           
  1513                           ;LAB04_2S.c: 59:             SSPCONbits.CKP = 1;
  1514  0058  1614               	bsf	20,4	;volatile
  1515  0059                     i1l56:	
  1516                           ;LAB04_2S.c: 60:             while(!SSPSTATbits.BF);
  1517                           
  1518  0059  1683               	bsf	3,5	;RP0=1, select bank1
  1519  005A  1303               	bcf	3,6	;RP1=0, select bank1
  1520  005B  1C14               	btfss	20,0	;volatile
  1521  005C  285E               	goto	u11_21
  1522  005D  285F               	goto	u11_20
  1523  005E                     u11_21:
  1524  005E  2859               	goto	i1l56
  1525  005F                     u11_20:
  1526  005F                     i1l897:
  1527                           
  1528                           ;LAB04_2S.c: 62:             PORTB = SSPBUF;
  1529  005F  1283               	bcf	3,5	;RP0=0, select bank0
  1530  0060  1303               	bcf	3,6	;RP1=0, select bank0
  1531  0061  0813               	movf	19,w	;volatile
  1532  0062  0086               	movwf	6	;volatile
  1533                           
  1534                           ;LAB04_2S.c: 63:             _delay((unsigned long)((250)*(8000000/4000000.0)));
  1535  0063  30A6               	movlw	166
  1536  0064  00F0               	movwf	??_isr
  1537  0065                     u18_27:
  1538  0065  0BF0               	decfsz	??_isr,f
  1539  0066  2865               	goto	u18_27
  1540  0067  0000               	nop
  1541                           
  1542                           ;LAB04_2S.c: 65:         }
  1543  0068  288D               	goto	i1l59
  1544  0069                     i1l55:	
  1545                           ;LAB04_2S.c: 66:         else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW)
  1546                           
  1547  0069  1A94               	btfsc	20,5	;volatile
  1548  006A  286C               	goto	u12_21
  1549  006B  286D               	goto	u12_20
  1550  006C                     u12_21:
  1551  006C  288D               	goto	i1l59
  1552  006D                     u12_20:
  1553  006D                     i1l899:
  1554  006D  1D14               	btfss	20,2	;volatile
  1555  006E  2870               	goto	u13_21
  1556  006F  2871               	goto	u13_20
  1557  0070                     u13_21:
  1558  0070  288D               	goto	i1l59
  1559  0071                     u13_20:
  1560  0071                     i1l901:
  1561                           
  1562                           ;LAB04_2S.c: 67:         {;LAB04_2S.c: 68:             temp_data = SSPBUF;
  1563  0071  1283               	bcf	3,5	;RP0=0, select bank0
  1564  0072  1303               	bcf	3,6	;RP1=0, select bank0
  1565  0073  0813               	movf	19,w	;volatile
  1566  0074  00F0               	movwf	??_isr
  1567  0075  01F1               	clrf	??_isr+1
  1568  0076  0870               	movf	??_isr,w
  1569  0077  00F7               	movwf	_temp_data
  1570  0078  0871               	movf	??_isr+1,w
  1571  0079  00F8               	movwf	_temp_data+1
  1572  007A                     i1l903:
  1573                           
  1574                           ;LAB04_2S.c: 69:             SSPSTATbits.BF = 0;
  1575  007A  1683               	bsf	3,5	;RP0=1, select bank1
  1576  007B  1303               	bcf	3,6	;RP1=0, select bank1
  1577  007C  1014               	bcf	20,0	;volatile
  1578                           
  1579                           ;LAB04_2S.c: 70:             SSPBUF = valor;
  1580  007D  0879               	movf	_valor,w
  1581  007E  1283               	bcf	3,5	;RP0=0, select bank0
  1582  007F  1303               	bcf	3,6	;RP1=0, select bank0
  1583  0080  0093               	movwf	19	;volatile
  1584  0081                     i1l905:
  1585                           
  1586                           ;LAB04_2S.c: 71:             SSPCONbits.CKP = 1;
  1587  0081  1614               	bsf	20,4	;volatile
  1588                           
  1589                           ;LAB04_2S.c: 72:             _delay((unsigned long)((250)*(8000000/4000000.0)));
  1590  0082  30A6               	movlw	166
  1591  0083  00F0               	movwf	??_isr
  1592  0084                     u19_27:
  1593  0084  0BF0               	decfsz	??_isr,f
  1594  0085  2884               	goto	u19_27
  1595  0086  0000               	nop
  1596  0087                     i1l61:	
  1597                           ;LAB04_2S.c: 73:             while(SSPSTATbits.BF);
  1598                           
  1599  0087  1683               	bsf	3,5	;RP0=1, select bank1
  1600  0088  1303               	bcf	3,6	;RP1=0, select bank1
  1601  0089  1814               	btfsc	20,0	;volatile
  1602  008A  288C               	goto	u14_21
  1603  008B  288D               	goto	u14_20
  1604  008C                     u14_21:
  1605  008C  2887               	goto	i1l61
  1606  008D                     u14_20:
  1607  008D                     i1l59:
  1608                           
  1609                           ;LAB04_2S.c: 76:         PIR1bits.SSPIF = 0;
  1610  008D  1283               	bcf	3,5	;RP0=0, select bank0
  1611  008E  1303               	bcf	3,6	;RP1=0, select bank0
  1612  008F  118C               	bcf	12,3	;volatile
  1613  0090                     i1l64:
  1614  0090  0873               	movf	??_isr+3,w
  1615  0091  008A               	movwf	10
  1616  0092  0E72               	swapf	??_isr+2,w
  1617  0093  0083               	movwf	3
  1618  0094  0EFE               	swapf	btemp,f
  1619  0095  0E7E               	swapf	btemp,w
  1620  0096  0009               	retfie
  1621  0097                     __end_of_isr:
  1622  007E                     btemp	set	126	;btemp
  1623  007E                     wtemp0	set	126
  1624                           
  1625                           	psect	intentry
  1626  0004                     __pintentry:	
  1627                           ;incstack = 0
  1628                           ; Regs used in _isr: [wreg+status,2+status,0]
  1629                           
  1630  0004                     interrupt_function:
  1631  007E                     saved_w	set	btemp
  1632  0004  00FE               	movwf	btemp
  1633  0005  0E03               	swapf	3,w
  1634  0006  00F2               	movwf	??_isr+2
  1635  0007  080A               	movf	10,w
  1636  0008  00F3               	movwf	??_isr+3
  1637  0009  120A  118A  2816   	ljmp	_isr
  1638                           
  1639                           	psect	idloc
  1640                           
  1641                           ;Config register IDLOC0 @ 0x2000
  1642                           ;	unspecified, using default values
  1643  2000                     	org	8192
  1644  2000  3FFF               	dw	16383
  1645                           
  1646                           ;Config register IDLOC1 @ 0x2001
  1647                           ;	unspecified, using default values
  1648  2001                     	org	8193
  1649  2001  3FFF               	dw	16383
  1650                           
  1651                           ;Config register IDLOC2 @ 0x2002
  1652                           ;	unspecified, using default values
  1653  2002                     	org	8194
  1654  2002  3FFF               	dw	16383
  1655                           
  1656                           ;Config register IDLOC3 @ 0x2003
  1657                           ;	unspecified, using default values
  1658  2003                     	org	8195
  1659  2003  3FFF               	dw	16383
  1660                           
  1661                           	psect	config
  1662                           
  1663                           ;Config register CONFIG1 @ 0x2007
  1664                           ;	Oscillator Selection bits
  1665                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1666                           ;	Watchdog Timer Enable bit
  1667                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1668                           ;	Power-up Timer Enable bit
  1669                           ;	PWRTE = OFF, PWRT disabled
  1670                           ;	RE3/MCLR pin function select bit
  1671                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1672                           ;	Code Protection bit
  1673                           ;	CP = OFF, Program memory code protection is disabled
  1674                           ;	Data Code Protection bit
  1675                           ;	CPD = OFF, Data memory code protection is disabled
  1676                           ;	Brown Out Reset Selection bits
  1677                           ;	BOREN = OFF, BOR disabled
  1678                           ;	Internal External Switchover bit
  1679                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1680                           ;	Fail-Safe Clock Monitor Enabled bit
  1681                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1682                           ;	Low Voltage Programming Enable bit
  1683                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1684                           ;	In-Circuit Debugger Mode bit
  1685                           ;	DEBUG = 0x1, unprogrammed default
  1686  2007                     	org	8199
  1687  2007  20D4               	dw	8404
  1688                           
  1689                           ;Config register CONFIG2 @ 0x2008
  1690                           ;	Brown-out Reset Selection bit
  1691                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1692                           ;	Flash Program Memory Self Write Enable bits
  1693                           ;	WRT = OFF, Write protection off
  1694  2008                     	org	8200
  1695  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      2       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_adc_init
    _main->_int_osc_MHz
    _setup->_I2C_Slave_Init

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_adc_init

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     318
                           _adc_init
                          _adc_start
                        _int_osc_MHz
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      15
                     _I2C_Slave_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Slave_Init                                       1     1      0      15
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _int_osc_MHz                                          3     3      0      15
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _adc_start                                            2     2      0      15
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             5     3      2     273
                                              4 COMMON     3     1      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_init
   _adc_start
   _int_osc_MHz
   _setup
     _I2C_Slave_Init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       2       5        2.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Fri Aug 19 09:29:42 2022

            _SSPSTATbits 0094                       l75 0162                       u10 01A1  
                     u11 01A0                      l140 0143                      l135 0142  
                    l128 0199                      l170 00E2                      l171 0100  
                    l172 00E6                      l173 00EA                      l165 00C6  
                    l174 010A                      l167 00CA                      l168 00CE  
                    l178 01B1                      l801 012C                      l843 0144  
                    l853 019B                      l781 0194                      l773 0181  
                    l845 0148                      l855 01A1                      l791 0114  
                    l783 0197                      l775 018F                      l847 0149  
                    l857 01AA                      l793 011B                      l785 0198  
                    l777 0190                      l849 015C                      l859 01AE  
                    l795 0122                      l787 010C                      l779 0191  
                    l797 0127                      l789 010D                      u177 01AC  
                    _isr 0016                     l1201 0176                     l1161 0098  
                   l1171 00A9                     l1163 0099                     l1165 009C  
                   l1183 00EE                     l1167 00A1                     l1175 00AE  
                   l1169 00A6                     l1179 00D2                     l1283 0134  
                   l1285 00B8                     l1197 0163                     l1287 00DA  
                   l1199 0171                     l1289 00F8                     ?_isr 0070  
                   i1l61 0087                     i1l55 0069                     i1l56 0059  
                   i1l64 0090                     i1l59 008D                     u4_20 001C  
                   u4_21 001B                     u5_20 0025                     u5_21 0024  
                   u6_20 0031                     u6_21 0030                     u7_20 0036  
                   u7_21 0035                     u8_20 003A                     u8_21 0039  
                   u9_20 004A                     u9_21 0049                     _main 0163  
                   btemp 007E                     start 000C                    ??_isr 0070  
                  ?_main 0070                    _ANSEL 0188                    i1l901 0071  
                  i1l903 007A                    i1l905 0081                    i1l871 002B  
                  i1l881 0041                    i1l873 002D                    i1l865 0016  
                  i1l891 004E                    i1l883 0042                    i1l875 0031  
                  i1l867 001C                    i1l893 0057                    i1l885 0043  
                  i1l877 0036                    i1l869 0025                    i1l895 0058  
                  i1l887 0044                    i1l879 003A                    i1l897 005F  
                  i1l889 004A                    i1l899 006D                    u10_20 004E  
                  u10_21 004D                    u11_20 005F                    u11_21 005E  
                  u12_20 006D                    u12_21 006C                    u13_20 0071  
                  u13_21 0070                    u14_20 008D                    u14_21 008C  
                  u18_27 0065                    _PORTA 0005                    _PORTB 0006  
                  _PORTD 0008                    u19_27 0084                    _TRISA 0085  
                  _TRISB 0086                    _TRISD 0088         adc_start@channel 0075  
     adc_init@vref_minus 0075          int_osc_MHz@freq 0076                    _valor 0079  
                  _setup 0144             ?_int_osc_MHz 0070                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0180                   ??_main 0077                   _ADRESH 001E  
                 _ADRESL 009E                   ?_setup 0070                   _ANSELH 0189  
       __end_of_adc_init 010B                   _SSPADD 0093                   _TRISC3 043B  
                 _TRISC4 043C                   _SSPBUF 0013                   _SSPCON 0014  
                 saved_w 007E  __end_of__initialization 0012           __pcstackCOMMON 0070  
          __end_of_setup 0163           adc_init@adc_cs 0076                  ??_setup 0075  
  I2C_Slave_Init@address 0074               __pmaintext 0163               __pintentry 0004  
              ?_adc_init 0074        __end_of_adc_start 01B2                  _SSPCON2 0091  
                _SSPSTAT 0094               ??_adc_init 0020                  __ptext1 0144  
                __ptext2 0180                  __ptext3 010B                  __ptext4 019A  
                __ptext5 0097                  __ptext6 0016     end_of_initialization 0012  
         _I2C_Slave_Init 0180                _TRISCbits 0087   __end_of_I2C_Slave_Init 019A  
      adc_init@vref_plus 0074      start_initialization 000F              __end_of_isr 0097  
        ?_I2C_Slave_Init 0070              __pbssCOMMON 0077                ___latbits 0002  
          __pcstackBANK0 0020                _adc_start 019A            ??_int_osc_MHz 0074  
             ?_adc_start 0070        interrupt_function 0004                 _PIE1bits 008C  
    __end_of_int_osc_MHz 0144                 _PIR1bits 000C                _temp_data 0077  
             _ADCON0bits 001F               _ADCON1bits 009F                 _adc_init 0097  
            ??_adc_start 0074              _int_osc_MHz 010B         ??_I2C_Slave_Init 0074  
             _INTCONbits 000B                 intlevel1 0000               _OSCCONbits 008F  
            _SSPCON2bits 0091               _SSPCONbits 0014  
