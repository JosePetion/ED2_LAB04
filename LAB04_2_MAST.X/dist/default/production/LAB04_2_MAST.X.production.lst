

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Fri Aug 19 09:22:16 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	text9,local,class=CODE,merge=1,delta=2
    17                           	psect	text10,local,class=CODE,merge=1,delta=2
    18                           	psect	text11,local,class=CODE,merge=1,delta=2
    19                           	psect	text12,local,class=CODE,merge=1,delta=2
    20                           	psect	text13,local,class=CODE,merge=1,delta=2
    21                           	psect	text14,local,class=CODE,merge=1,delta=2
    22                           	psect	text15,local,class=CODE,merge=1,delta=2
    23                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 2.40
    28                           ; Generated 17/11/2021 GMT
    29                           ; 
    30                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F887 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  000E                     	;# 
    77  000E                     	;# 
    78  000F                     	;# 
    79  0010                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0014                     	;# 
    84  0015                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  001D                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  0081                     	;# 
    98  0085                     	;# 
    99  0086                     	;# 
   100  0087                     	;# 
   101  0088                     	;# 
   102  0089                     	;# 
   103  008C                     	;# 
   104  008D                     	;# 
   105  008E                     	;# 
   106  008F                     	;# 
   107  0090                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0094                     	;# 
   114  0095                     	;# 
   115  0096                     	;# 
   116  0097                     	;# 
   117  0098                     	;# 
   118  0099                     	;# 
   119  009A                     	;# 
   120  009B                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009E                     	;# 
   124  009F                     	;# 
   125  0105                     	;# 
   126  0107                     	;# 
   127  0108                     	;# 
   128  0109                     	;# 
   129  010C                     	;# 
   130  010C                     	;# 
   131  010D                     	;# 
   132  010E                     	;# 
   133  010F                     	;# 
   134  0185                     	;# 
   135  0187                     	;# 
   136  0188                     	;# 
   137  0189                     	;# 
   138  018C                     	;# 
   139  018D                     	;# 
   140  0000                     	;# 
   141  0001                     	;# 
   142  0002                     	;# 
   143  0003                     	;# 
   144  0004                     	;# 
   145  0005                     	;# 
   146  0006                     	;# 
   147  0007                     	;# 
   148  0008                     	;# 
   149  0009                     	;# 
   150  000A                     	;# 
   151  000B                     	;# 
   152  000C                     	;# 
   153  000D                     	;# 
   154  000E                     	;# 
   155  000E                     	;# 
   156  000F                     	;# 
   157  0010                     	;# 
   158  0011                     	;# 
   159  0012                     	;# 
   160  0013                     	;# 
   161  0014                     	;# 
   162  0015                     	;# 
   163  0015                     	;# 
   164  0016                     	;# 
   165  0017                     	;# 
   166  0018                     	;# 
   167  0019                     	;# 
   168  001A                     	;# 
   169  001B                     	;# 
   170  001B                     	;# 
   171  001C                     	;# 
   172  001D                     	;# 
   173  001E                     	;# 
   174  001F                     	;# 
   175  0081                     	;# 
   176  0085                     	;# 
   177  0086                     	;# 
   178  0087                     	;# 
   179  0088                     	;# 
   180  0089                     	;# 
   181  008C                     	;# 
   182  008D                     	;# 
   183  008E                     	;# 
   184  008F                     	;# 
   185  0090                     	;# 
   186  0091                     	;# 
   187  0092                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0094                     	;# 
   192  0095                     	;# 
   193  0096                     	;# 
   194  0097                     	;# 
   195  0098                     	;# 
   196  0099                     	;# 
   197  009A                     	;# 
   198  009B                     	;# 
   199  009C                     	;# 
   200  009D                     	;# 
   201  009E                     	;# 
   202  009F                     	;# 
   203  0105                     	;# 
   204  0107                     	;# 
   205  0108                     	;# 
   206  0109                     	;# 
   207  010C                     	;# 
   208  010C                     	;# 
   209  010D                     	;# 
   210  010E                     	;# 
   211  010F                     	;# 
   212  0185                     	;# 
   213  0187                     	;# 
   214  0188                     	;# 
   215  0189                     	;# 
   216  018C                     	;# 
   217  018D                     	;# 
   218  0000                     	;# 
   219  0001                     	;# 
   220  0002                     	;# 
   221  0003                     	;# 
   222  0004                     	;# 
   223  0005                     	;# 
   224  0006                     	;# 
   225  0007                     	;# 
   226  0008                     	;# 
   227  0009                     	;# 
   228  000A                     	;# 
   229  000B                     	;# 
   230  000C                     	;# 
   231  000D                     	;# 
   232  000E                     	;# 
   233  000E                     	;# 
   234  000F                     	;# 
   235  0010                     	;# 
   236  0011                     	;# 
   237  0012                     	;# 
   238  0013                     	;# 
   239  0014                     	;# 
   240  0015                     	;# 
   241  0015                     	;# 
   242  0016                     	;# 
   243  0017                     	;# 
   244  0018                     	;# 
   245  0019                     	;# 
   246  001A                     	;# 
   247  001B                     	;# 
   248  001B                     	;# 
   249  001C                     	;# 
   250  001D                     	;# 
   251  001E                     	;# 
   252  001F                     	;# 
   253  0081                     	;# 
   254  0085                     	;# 
   255  0086                     	;# 
   256  0087                     	;# 
   257  0088                     	;# 
   258  0089                     	;# 
   259  008C                     	;# 
   260  008D                     	;# 
   261  008E                     	;# 
   262  008F                     	;# 
   263  0090                     	;# 
   264  0091                     	;# 
   265  0092                     	;# 
   266  0093                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0094                     	;# 
   270  0095                     	;# 
   271  0096                     	;# 
   272  0097                     	;# 
   273  0098                     	;# 
   274  0099                     	;# 
   275  009A                     	;# 
   276  009B                     	;# 
   277  009C                     	;# 
   278  009D                     	;# 
   279  009E                     	;# 
   280  009F                     	;# 
   281  0105                     	;# 
   282  0107                     	;# 
   283  0108                     	;# 
   284  0109                     	;# 
   285  010C                     	;# 
   286  010C                     	;# 
   287  010D                     	;# 
   288  010E                     	;# 
   289  010F                     	;# 
   290  0185                     	;# 
   291  0187                     	;# 
   292  0188                     	;# 
   293  0189                     	;# 
   294  018C                     	;# 
   295  018D                     	;# 
   296  0000                     	;# 
   297  0001                     	;# 
   298  0002                     	;# 
   299  0003                     	;# 
   300  0004                     	;# 
   301  0005                     	;# 
   302  0006                     	;# 
   303  0007                     	;# 
   304  0008                     	;# 
   305  0009                     	;# 
   306  000A                     	;# 
   307  000B                     	;# 
   308  000C                     	;# 
   309  000D                     	;# 
   310  000E                     	;# 
   311  000E                     	;# 
   312  000F                     	;# 
   313  0010                     	;# 
   314  0011                     	;# 
   315  0012                     	;# 
   316  0013                     	;# 
   317  0014                     	;# 
   318  0015                     	;# 
   319  0015                     	;# 
   320  0016                     	;# 
   321  0017                     	;# 
   322  0018                     	;# 
   323  0019                     	;# 
   324  001A                     	;# 
   325  001B                     	;# 
   326  001B                     	;# 
   327  001C                     	;# 
   328  001D                     	;# 
   329  001E                     	;# 
   330  001F                     	;# 
   331  0081                     	;# 
   332  0085                     	;# 
   333  0086                     	;# 
   334  0087                     	;# 
   335  0088                     	;# 
   336  0089                     	;# 
   337  008C                     	;# 
   338  008D                     	;# 
   339  008E                     	;# 
   340  008F                     	;# 
   341  0090                     	;# 
   342  0091                     	;# 
   343  0092                     	;# 
   344  0093                     	;# 
   345  0093                     	;# 
   346  0093                     	;# 
   347  0094                     	;# 
   348  0095                     	;# 
   349  0096                     	;# 
   350  0097                     	;# 
   351  0098                     	;# 
   352  0099                     	;# 
   353  009A                     	;# 
   354  009B                     	;# 
   355  009C                     	;# 
   356  009D                     	;# 
   357  009E                     	;# 
   358  009F                     	;# 
   359  0105                     	;# 
   360  0107                     	;# 
   361  0108                     	;# 
   362  0109                     	;# 
   363  010C                     	;# 
   364  010C                     	;# 
   365  010D                     	;# 
   366  010E                     	;# 
   367  010F                     	;# 
   368  0185                     	;# 
   369  0187                     	;# 
   370  0188                     	;# 
   371  0189                     	;# 
   372  018C                     	;# 
   373  018D                     	;# 
   374  0000                     	;# 
   375  0001                     	;# 
   376  0002                     	;# 
   377  0003                     	;# 
   378  0004                     	;# 
   379  0005                     	;# 
   380  0006                     	;# 
   381  0007                     	;# 
   382  0008                     	;# 
   383  0009                     	;# 
   384  000A                     	;# 
   385  000B                     	;# 
   386  000C                     	;# 
   387  000D                     	;# 
   388  000E                     	;# 
   389  000E                     	;# 
   390  000F                     	;# 
   391  0010                     	;# 
   392  0011                     	;# 
   393  0012                     	;# 
   394  0013                     	;# 
   395  0014                     	;# 
   396  0015                     	;# 
   397  0015                     	;# 
   398  0016                     	;# 
   399  0017                     	;# 
   400  0018                     	;# 
   401  0019                     	;# 
   402  001A                     	;# 
   403  001B                     	;# 
   404  001B                     	;# 
   405  001C                     	;# 
   406  001D                     	;# 
   407  001E                     	;# 
   408  001F                     	;# 
   409  0081                     	;# 
   410  0085                     	;# 
   411  0086                     	;# 
   412  0087                     	;# 
   413  0088                     	;# 
   414  0089                     	;# 
   415  008C                     	;# 
   416  008D                     	;# 
   417  008E                     	;# 
   418  008F                     	;# 
   419  0090                     	;# 
   420  0091                     	;# 
   421  0092                     	;# 
   422  0093                     	;# 
   423  0093                     	;# 
   424  0093                     	;# 
   425  0094                     	;# 
   426  0095                     	;# 
   427  0096                     	;# 
   428  0097                     	;# 
   429  0098                     	;# 
   430  0099                     	;# 
   431  009A                     	;# 
   432  009B                     	;# 
   433  009C                     	;# 
   434  009D                     	;# 
   435  009E                     	;# 
   436  009F                     	;# 
   437  0105                     	;# 
   438  0107                     	;# 
   439  0108                     	;# 
   440  0109                     	;# 
   441  010C                     	;# 
   442  010C                     	;# 
   443  010D                     	;# 
   444  010E                     	;# 
   445  010F                     	;# 
   446  0185                     	;# 
   447  0187                     	;# 
   448  0188                     	;# 
   449  0189                     	;# 
   450  018C                     	;# 
   451  018D                     	;# 
   452  0007                     _PORTCbits	set	7
   453  000B                     _INTCONbits	set	11
   454  000C                     _PIR1bits	set	12
   455  0013                     _SSPBUF	set	19
   456  0014                     _SSPCON	set	20
   457  0008                     _PORTD	set	8
   458  0007                     _PORTC	set	7
   459  0006                     _PORTB	set	6
   460  008F                     _OSCCONbits	set	143
   461  008C                     _PIE1bits	set	140
   462  0091                     _SSPCON2bits	set	145
   463  0087                     _TRISCbits	set	135
   464  0094                     _SSPSTAT	set	148
   465  0093                     _SSPADD	set	147
   466  0091                     _SSPCON2	set	145
   467  0088                     _TRISD	set	136
   468  0087                     _TRISC	set	135
   469  0086                     _TRISB	set	134
   470  043C                     _TRISC4	set	1084
   471  043B                     _TRISC3	set	1083
   472  0189                     _ANSELH	set	393
   473  0188                     _ANSEL	set	392
   474                           
   475                           	psect	cinit
   476  07FC                     start_initialization:	
   477                           ; #config settings
   478                           
   479  07FC                     __initialization:
   480  07FC                     end_of_initialization:	
   481                           ;End of C runtime variable initialization code
   482                           
   483  07FC                     __end_of__initialization:
   484  07FC  0183               	clrf	3
   485  07FD  120A  118A  2F81   	ljmp	_main	;jump to C main() function
   486                           
   487                           	psect	cstackCOMMON
   488  0070                     __pcstackCOMMON:
   489  0070                     ?_int_osc_MHz:
   490  0070                     ??_int_osc_MHz:	
   491                           ; 1 bytes @ 0x0
   492                           
   493  0070                     ?_setup:	
   494                           ; 1 bytes @ 0x0
   495                           
   496  0070                     ?_I2C_Master_Start:	
   497                           ; 1 bytes @ 0x0
   498                           
   499  0070                     ??_I2C_Master_Start:	
   500                           ; 1 bytes @ 0x0
   501                           
   502  0070                     ?_I2C_Master_Write:	
   503                           ; 1 bytes @ 0x0
   504                           
   505  0070                     ?_I2C_Master_Stop:	
   506                           ; 1 bytes @ 0x0
   507                           
   508  0070                     ??_I2C_Master_Stop:	
   509                           ; 1 bytes @ 0x0
   510                           
   511  0070                     ?_Lcd8_Init:	
   512                           ; 1 bytes @ 0x0
   513                           
   514  0070                     ?_main:	
   515                           ; 1 bytes @ 0x0
   516                           
   517  0070                     ?_I2C_Master_Wait:	
   518                           ; 1 bytes @ 0x0
   519                           
   520  0070                     ??_I2C_Master_Wait:	
   521                           ; 1 bytes @ 0x0
   522                           
   523  0070                     ?_Lcd8_Port:	
   524                           ; 1 bytes @ 0x0
   525                           
   526  0070                     ??_Lcd8_Port:	
   527                           ; 1 bytes @ 0x0
   528                           
   529  0070                     ?_Lcd8_Cmd:	
   530                           ; 1 bytes @ 0x0
   531                           
   532  0070                     ??_Lcd8_Cmd:	
   533                           ; 1 bytes @ 0x0
   534                           
   535  0070                     ?_Lcd8_Write_Char:	
   536                           ; 1 bytes @ 0x0
   537                           
   538  0070                     ??_Lcd8_Write_Char:	
   539                           ; 1 bytes @ 0x0
   540                           
   541  0070                     ?_I2C_Master_Read:	
   542                           ; 1 bytes @ 0x0
   543                           
   544  0070                     ?___lldiv:	
   545                           ; 2 bytes @ 0x0
   546                           
   547  0070                     Lcd8_Port@a:	
   548                           ; 4 bytes @ 0x0
   549                           
   550  0070                     I2C_Master_Write@d:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0070                     I2C_Master_Read@a:	
   554                           ; 2 bytes @ 0x0
   555                           
   556  0070                     ___lldiv@divisor:	
   557                           ; 2 bytes @ 0x0
   558                           
   559                           
   560                           ; 4 bytes @ 0x0
   561  0070                     	ds	1
   562  0071                     Lcd8_Write_Char@a:
   563                           
   564                           ; 1 bytes @ 0x1
   565  0071                     	ds	1
   566  0072                     ??_I2C_Master_Write:
   567  0072                     ??_I2C_Master_Read:	
   568                           ; 1 bytes @ 0x2
   569                           
   570  0072                     ?_Lcd8_Write_String:	
   571                           ; 1 bytes @ 0x2
   572                           
   573  0072                     int_osc_MHz@freq:	
   574                           ; 1 bytes @ 0x2
   575                           
   576  0072                     Lcd8_Cmd@a:	
   577                           ; 1 bytes @ 0x2
   578                           
   579  0072                     Lcd8_Write_String@a:	
   580                           ; 1 bytes @ 0x2
   581                           
   582                           
   583                           ; 2 bytes @ 0x2
   584  0072                     	ds	1
   585  0073                     ?_Lcd8_Set_Cursor:
   586  0073                     ??_Lcd8_Init:	
   587                           ; 1 bytes @ 0x3
   588                           
   589  0073                     Lcd8_Set_Cursor@b:	
   590                           ; 1 bytes @ 0x3
   591                           
   592                           
   593                           ; 1 bytes @ 0x3
   594  0073                     	ds	1
   595  0074                     ??_Lcd8_Set_Cursor:
   596  0074                     ??_Lcd8_Write_String:	
   597                           ; 1 bytes @ 0x4
   598                           
   599  0074                     I2C_Master_Read@temp:	
   600                           ; 1 bytes @ 0x4
   601                           
   602  0074                     ___lldiv@dividend:	
   603                           ; 2 bytes @ 0x4
   604                           
   605                           
   606                           ; 4 bytes @ 0x4
   607  0074                     	ds	1
   608  0075                     Lcd8_Set_Cursor@a:
   609                           
   610                           ; 1 bytes @ 0x5
   611  0075                     	ds	1
   612  0076                     Lcd8_Set_Cursor@x:
   613  0076                     Lcd8_Write_String@i:	
   614                           ; 1 bytes @ 0x6
   615                           
   616                           
   617                           ; 2 bytes @ 0x6
   618  0076                     	ds	2
   619  0078                     ??___lldiv:
   620                           
   621                           ; 1 bytes @ 0x8
   622  0078                     	ds	1
   623  0079                     ___lldiv@quotient:
   624                           
   625                           ; 4 bytes @ 0x9
   626  0079                     	ds	4
   627  007D                     ___lldiv@counter:
   628                           
   629                           ; 1 bytes @ 0xD
   630  007D                     	ds	1
   631  007E                     ??_setup:
   632                           
   633                           	psect	cstackBANK0
   634  0020                     __pcstackBANK0:	
   635                           ; 1 bytes @ 0xE
   636                           
   637  0020                     ?_I2C_Master_Init:
   638  0020                     I2C_Master_Init@c:	
   639                           ; 1 bytes @ 0x0
   640                           
   641                           
   642                           ; 4 bytes @ 0x0
   643  0020                     	ds	4
   644  0024                     ??_I2C_Master_Init:
   645                           
   646                           ; 1 bytes @ 0x4
   647  0024                     	ds	4
   648  0028                     ??_main:
   649                           
   650                           ; 1 bytes @ 0x8
   651  0028                     	ds	3
   652                           
   653                           	psect	maintext
   654  0781                     __pmaintext:	
   655 ;;
   656 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   657 ;;
   658 ;; *************** function _main *****************
   659 ;; Defined at:
   660 ;;		line 38 in file "LAB4_2M.c"
   661 ;; Parameters:    Size  Location     Type
   662 ;;		None
   663 ;; Auto vars:     Size  Location     Type
   664 ;;		None
   665 ;; Return value:  Size  Location     Type
   666 ;;                  1    wreg      void 
   667 ;; Registers used:
   668 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   669 ;; Tracked objects:
   670 ;;		On entry : B00/0
   671 ;;		On exit  : 0/0
   672 ;;		Unchanged: 0/0
   673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   674 ;;      Params:         0       0       0       0       0
   675 ;;      Locals:         0       0       0       0       0
   676 ;;      Temps:          0       3       0       0       0
   677 ;;      Totals:         0       3       0       0       0
   678 ;;Total ram usage:        3 bytes
   679 ;; Hardware stack levels required when called: 3
   680 ;; This function calls:
   681 ;;		_I2C_Master_Read
   682 ;;		_I2C_Master_Start
   683 ;;		_I2C_Master_Stop
   684 ;;		_I2C_Master_Write
   685 ;;		_Lcd8_Set_Cursor
   686 ;;		_Lcd8_Write_String
   687 ;;		_int_osc_MHz
   688 ;;		_setup
   689 ;; This function is called by:
   690 ;;		Startup code after reset
   691 ;; This function uses a non-reentrant model
   692 ;;
   693                           
   694  0781                     _main:	
   695                           ;psect for function _main
   696                           
   697  0781                     l1055:	
   698                           ;incstack = 0
   699                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   700                           
   701                           
   702                           ;LAB4_2M.c: 39:     int_osc_MHz(8);
   703  0781  3008               	movlw	8
   704  0782  120A  118A  268F  120A  118A  	fcall	_int_osc_MHz
   705  0787                     l1057:
   706                           
   707                           ;LAB4_2M.c: 40:     setup();
   708  0787  120A  118A  25B3  120A  118A  	fcall	_setup
   709  078C                     l1059:
   710                           
   711                           ;LAB4_2M.c: 43:         I2C_Master_Start();
   712  078C  120A  118A  2566  120A  118A  	fcall	_I2C_Master_Start
   713  0791                     l1061:
   714                           
   715                           ;LAB4_2M.c: 44:         I2C_Master_Write(0x50);
   716  0791  3050               	movlw	80
   717  0792  00F0               	movwf	I2C_Master_Write@d
   718  0793  3000               	movlw	0
   719  0794  00F1               	movwf	I2C_Master_Write@d+1
   720  0795  120A  118A  2578  120A  118A  	fcall	_I2C_Master_Write
   721  079A                     l1063:
   722                           
   723                           ;LAB4_2M.c: 45:         I2C_Master_Write(0);
   724  079A  3000               	movlw	0
   725  079B  00F0               	movwf	I2C_Master_Write@d
   726  079C  00F1               	movwf	I2C_Master_Write@d+1
   727  079D  120A  118A  2578  120A  118A  	fcall	_I2C_Master_Write
   728  07A2                     l1065:
   729                           
   730                           ;LAB4_2M.c: 46:         I2C_Master_Stop();
   731  07A2  120A  118A  256F  120A  118A  	fcall	_I2C_Master_Stop
   732  07A7                     l1067:
   733                           
   734                           ;LAB4_2M.c: 47:         _delay((unsigned long)((200)*(8000000/4000.0)));
   735  07A7  3003               	movlw	3
   736  07A8  1283               	bcf	3,5	;RP0=0, select bank0
   737  07A9  1303               	bcf	3,6	;RP1=0, select bank0
   738  07AA  00AA               	movwf	??_main+2
   739  07AB  3008               	movlw	8
   740  07AC  00A9               	movwf	??_main+1
   741  07AD  3076               	movlw	118
   742  07AE  00A8               	movwf	??_main
   743  07AF                     u277:
   744  07AF  0BA8               	decfsz	??_main,f
   745  07B0  2FAF               	goto	u277
   746  07B1  0BA9               	decfsz	??_main+1,f
   747  07B2  2FAF               	goto	u277
   748  07B3  0BAA               	decfsz	??_main+2,f
   749  07B4  2FAF               	goto	u277
   750  07B5  0000               	nop
   751  07B6                     l1069:
   752                           
   753                           ;LAB4_2M.c: 49:         I2C_Master_Start();
   754  07B6  120A  118A  2566  120A  118A  	fcall	_I2C_Master_Start
   755  07BB                     l1071:
   756                           
   757                           ;LAB4_2M.c: 50:         I2C_Master_Write(0x51);
   758  07BB  3051               	movlw	81
   759  07BC  00F0               	movwf	I2C_Master_Write@d
   760  07BD  3000               	movlw	0
   761  07BE  00F1               	movwf	I2C_Master_Write@d+1
   762  07BF  120A  118A  2578  120A  118A  	fcall	_I2C_Master_Write
   763  07C4                     l1073:
   764                           
   765                           ;LAB4_2M.c: 51:         Lcd8_Set_Cursor(1, 1);
   766  07C4  01F3               	clrf	Lcd8_Set_Cursor@b
   767  07C5  0AF3               	incf	Lcd8_Set_Cursor@b,f
   768  07C6  3001               	movlw	1
   769  07C7  120A  118A  25D6  120A  118A  	fcall	_Lcd8_Set_Cursor
   770  07CC                     l1075:
   771                           
   772                           ;LAB4_2M.c: 52:         PORTB = I2C_Master_Read(0);
   773  07CC  3000               	movlw	0
   774  07CD  00F0               	movwf	I2C_Master_Read@a
   775  07CE  00F1               	movwf	I2C_Master_Read@a+1
   776  07CF  120A  118A  25FA  120A  118A  	fcall	_I2C_Master_Read
   777  07D4  0870               	movf	?_I2C_Master_Read,w
   778  07D5  1283               	bcf	3,5	;RP0=0, select bank0
   779  07D6  1303               	bcf	3,6	;RP1=0, select bank0
   780  07D7  0086               	movwf	6	;volatile
   781  07D8                     l1077:
   782                           
   783                           ;LAB4_2M.c: 53:         Lcd8_Write_String(PORTB);
   784  07D8  0806               	movf	6,w	;volatile
   785  07D9  00A8               	movwf	??_main
   786  07DA  01A9               	clrf	??_main+1
   787  07DB  0828               	movf	??_main,w
   788  07DC  00F2               	movwf	Lcd8_Write_String@a
   789  07DD  0829               	movf	??_main+1,w
   790  07DE  00F3               	movwf	Lcd8_Write_String@a+1
   791  07DF  120A  118A  2628  120A  118A  	fcall	_Lcd8_Write_String
   792  07E4                     l1079:
   793                           
   794                           ;LAB4_2M.c: 54:         I2C_Master_Stop();
   795  07E4  120A  118A  256F  120A  118A  	fcall	_I2C_Master_Stop
   796                           
   797                           ;LAB4_2M.c: 55:         _delay((unsigned long)((200)*(8000000/4000.0)));
   798  07E9  3003               	movlw	3
   799  07EA  1283               	bcf	3,5	;RP0=0, select bank0
   800  07EB  1303               	bcf	3,6	;RP1=0, select bank0
   801  07EC  00AA               	movwf	??_main+2
   802  07ED  3008               	movlw	8
   803  07EE  00A9               	movwf	??_main+1
   804  07EF  3076               	movlw	118
   805  07F0  00A8               	movwf	??_main
   806  07F1                     u287:
   807  07F1  0BA8               	decfsz	??_main,f
   808  07F2  2FF1               	goto	u287
   809  07F3  0BA9               	decfsz	??_main+1,f
   810  07F4  2FF1               	goto	u287
   811  07F5  0BAA               	decfsz	??_main+2,f
   812  07F6  2FF1               	goto	u287
   813  07F7  0000               	nop
   814  07F8  2F8C               	goto	l1059
   815  07F9  120A  118A  2800   	ljmp	start
   816  07FC                     __end_of_main:
   817                           
   818                           	psect	text1
   819  05B3                     __ptext1:	
   820 ;; *************** function _setup *****************
   821 ;; Defined at:
   822 ;;		line 63 in file "LAB4_2M.c"
   823 ;; Parameters:    Size  Location     Type
   824 ;;		None
   825 ;; Auto vars:     Size  Location     Type
   826 ;;		None
   827 ;; Return value:  Size  Location     Type
   828 ;;                  1    wreg      void 
   829 ;; Registers used:
   830 ;;		wreg, status,2, status,0, pclath, cstack
   831 ;; Tracked objects:
   832 ;;		On entry : 0/0
   833 ;;		On exit  : 0/0
   834 ;;		Unchanged: 0/0
   835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   836 ;;      Params:         0       0       0       0       0
   837 ;;      Locals:         0       0       0       0       0
   838 ;;      Temps:          0       0       0       0       0
   839 ;;      Totals:         0       0       0       0       0
   840 ;;Total ram usage:        0 bytes
   841 ;; Hardware stack levels used: 1
   842 ;; Hardware stack levels required when called: 2
   843 ;; This function calls:
   844 ;;		_I2C_Master_Init
   845 ;;		_Lcd8_Init
   846 ;; This function is called by:
   847 ;;		_main
   848 ;; This function uses a non-reentrant model
   849 ;;
   850                           
   851  05B3                     _setup:	
   852                           ;psect for function _setup
   853                           
   854  05B3                     l1007:	
   855                           ;incstack = 0
   856                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   857                           
   858                           
   859                           ;LAB4_2M.c: 65:     ANSEL = 0b00000000;
   860  05B3  1683               	bsf	3,5	;RP0=1, select bank3
   861  05B4  1703               	bsf	3,6	;RP1=1, select bank3
   862  05B5  0188               	clrf	8	;volatile
   863                           
   864                           ;LAB4_2M.c: 66:     ANSELH = 0b00000000;
   865  05B6  0189               	clrf	9	;volatile
   866                           
   867                           ;LAB4_2M.c: 67:     TRISB = 0b00000000;
   868  05B7  1683               	bsf	3,5	;RP0=1, select bank1
   869  05B8  1303               	bcf	3,6	;RP1=0, select bank1
   870  05B9  0186               	clrf	6	;volatile
   871                           
   872                           ;LAB4_2M.c: 68:     TRISC = 0;
   873  05BA  0187               	clrf	7	;volatile
   874                           
   875                           ;LAB4_2M.c: 69:     TRISD = 0;
   876  05BB  0188               	clrf	8	;volatile
   877                           
   878                           ;LAB4_2M.c: 70:     PORTB = 0b00000000;
   879  05BC  1283               	bcf	3,5	;RP0=0, select bank0
   880  05BD  1303               	bcf	3,6	;RP1=0, select bank0
   881  05BE  0186               	clrf	6	;volatile
   882                           
   883                           ;LAB4_2M.c: 71:     PORTC = 0;
   884  05BF  0187               	clrf	7	;volatile
   885                           
   886                           ;LAB4_2M.c: 72:     PORTD = 0;
   887  05C0  0188               	clrf	8	;volatile
   888  05C1                     l1009:
   889                           
   890                           ;LAB4_2M.c: 73:     Lcd8_Init();
   891  05C1  120A  118A  26C8  120A  118A  	fcall	_Lcd8_Init
   892  05C6                     l1011:
   893                           
   894                           ;LAB4_2M.c: 74:     I2C_Master_Init(100000);
   895  05C6  3000               	movlw	0
   896  05C7  1283               	bcf	3,5	;RP0=0, select bank0
   897  05C8  1303               	bcf	3,6	;RP1=0, select bank0
   898  05C9  00A3               	movwf	I2C_Master_Init@c+3
   899  05CA  3001               	movlw	1
   900  05CB  00A2               	movwf	I2C_Master_Init@c+2
   901  05CC  3086               	movlw	134
   902  05CD  00A1               	movwf	I2C_Master_Init@c+1
   903  05CE  30A0               	movlw	160
   904  05CF  00A0               	movwf	I2C_Master_Init@c
   905  05D0  120A  118A  2657  120A  118A  	fcall	_I2C_Master_Init
   906  05D5                     l49:
   907  05D5  0008               	return
   908  05D6                     __end_of_setup:
   909                           
   910                           	psect	text2
   911  06C8                     __ptext2:	
   912 ;; *************** function _Lcd8_Init *****************
   913 ;; Defined at:
   914 ;;		line 48 in file "lcd8.c"
   915 ;; Parameters:    Size  Location     Type
   916 ;;		None
   917 ;; Auto vars:     Size  Location     Type
   918 ;;		None
   919 ;; Return value:  Size  Location     Type
   920 ;;                  1    wreg      void 
   921 ;; Registers used:
   922 ;;		wreg, status,2, status,0, pclath, cstack
   923 ;; Tracked objects:
   924 ;;		On entry : 0/0
   925 ;;		On exit  : 0/0
   926 ;;		Unchanged: 0/0
   927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   928 ;;      Params:         0       0       0       0       0
   929 ;;      Locals:         0       0       0       0       0
   930 ;;      Temps:          2       0       0       0       0
   931 ;;      Totals:         2       0       0       0       0
   932 ;;Total ram usage:        2 bytes
   933 ;; Hardware stack levels used: 1
   934 ;; Hardware stack levels required when called: 1
   935 ;; This function calls:
   936 ;;		_Lcd8_Cmd
   937 ;;		_Lcd8_Port
   938 ;; This function is called by:
   939 ;;		_setup
   940 ;; This function uses a non-reentrant model
   941 ;;
   942                           
   943  06C8                     _Lcd8_Init:	
   944                           ;psect for function _Lcd8_Init
   945                           
   946  06C8                     l779:	
   947                           ;incstack = 0
   948                           ; Regs used in _Lcd8_Init: [wreg+status,2+status,0+pclath+cstack]
   949                           
   950                           
   951                           ;lcd8.c: 49:     Lcd8_Port(0x00);
   952  06C8  3000               	movlw	0
   953  06C9  120A  118A  2560  120A  118A  	fcall	_Lcd8_Port
   954  06CE                     l781:
   955                           
   956                           ;lcd8.c: 50:     _delay((unsigned long)((20)*(8000000/4000.0)));
   957  06CE  3034               	movlw	52
   958  06CF  00F4               	movwf	??_Lcd8_Init+1
   959  06D0  30F1               	movlw	241
   960  06D1  00F3               	movwf	??_Lcd8_Init
   961  06D2                     u297:
   962  06D2  0BF3               	decfsz	??_Lcd8_Init,f
   963  06D3  2ED2               	goto	u297
   964  06D4  0BF4               	decfsz	??_Lcd8_Init+1,f
   965  06D5  2ED2               	goto	u297
   966  06D6  2ED7               	nop2
   967  06D7                     l783:
   968                           
   969                           ;lcd8.c: 51:     Lcd8_Cmd(0x30);
   970  06D7  3030               	movlw	48
   971  06D8  120A  118A  259F  120A  118A  	fcall	_Lcd8_Cmd
   972                           
   973                           ;lcd8.c: 52:     _delay((unsigned long)((5)*(8000000/4000.0)));
   974  06DD  300D               	movlw	13
   975  06DE  00F4               	movwf	??_Lcd8_Init+1
   976  06DF  30FB               	movlw	251
   977  06E0  00F3               	movwf	??_Lcd8_Init
   978  06E1                     u307:
   979  06E1  0BF3               	decfsz	??_Lcd8_Init,f
   980  06E2  2EE1               	goto	u307
   981  06E3  0BF4               	decfsz	??_Lcd8_Init+1,f
   982  06E4  2EE1               	goto	u307
   983  06E5  2EE6               	nop2
   984  06E6                     l785:
   985                           
   986                           ;lcd8.c: 53:     Lcd8_Cmd(0x30);
   987  06E6  3030               	movlw	48
   988  06E7  120A  118A  259F  120A  118A  	fcall	_Lcd8_Cmd
   989  06EC                     l787:
   990                           
   991                           ;lcd8.c: 54:     _delay((unsigned long)((100)*(8000000/4000000.0)));
   992  06EC  3042               	movlw	66
   993  06ED  00F3               	movwf	??_Lcd8_Init
   994  06EE                     u317:
   995  06EE  0BF3               	decfsz	??_Lcd8_Init,f
   996  06EF  2EEE               	goto	u317
   997  06F0  0000               	nop
   998                           
   999                           ;lcd8.c: 55:     Lcd8_Cmd(0x30);
  1000  06F1  3030               	movlw	48
  1001  06F2  120A  118A  259F  120A  118A  	fcall	_Lcd8_Cmd
  1002  06F7                     l789:
  1003                           
  1004                           ;lcd8.c: 56:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  1005  06F7  3042               	movlw	66
  1006  06F8  00F3               	movwf	??_Lcd8_Init
  1007  06F9                     u327:
  1008  06F9  0BF3               	decfsz	??_Lcd8_Init,f
  1009  06FA  2EF9               	goto	u327
  1010  06FB  0000               	nop
  1011  06FC                     l791:
  1012                           
  1013                           ;lcd8.c: 58:     Lcd8_Cmd(0x38);
  1014  06FC  3038               	movlw	56
  1015  06FD  120A  118A  259F  120A  118A  	fcall	_Lcd8_Cmd
  1016  0702                     l793:
  1017                           
  1018                           ;lcd8.c: 59:     Lcd8_Cmd(0x08);
  1019  0702  3008               	movlw	8
  1020  0703  120A  118A  259F  120A  118A  	fcall	_Lcd8_Cmd
  1021  0708                     l795:
  1022                           
  1023                           ;lcd8.c: 60:     Lcd8_Cmd(0x01);
  1024  0708  3001               	movlw	1
  1025  0709  120A  118A  259F  120A  118A  	fcall	_Lcd8_Cmd
  1026  070E                     l797:
  1027                           
  1028                           ;lcd8.c: 61:     Lcd8_Cmd(0x06);
  1029  070E  3006               	movlw	6
  1030  070F  120A  118A  259F  120A  118A  	fcall	_Lcd8_Cmd
  1031  0714                     l799:
  1032                           
  1033                           ;lcd8.c: 62:     Lcd8_Cmd(0x0C);
  1034  0714  300C               	movlw	12
  1035  0715  120A  118A  259F  120A  118A  	fcall	_Lcd8_Cmd
  1036  071A                     l138:
  1037  071A  0008               	return
  1038  071B                     __end_of_Lcd8_Init:
  1039                           
  1040                           	psect	text3
  1041  0560                     __ptext3:	
  1042 ;; *************** function _Lcd8_Port *****************
  1043 ;; Defined at:
  1044 ;;		line 14 in file "lcd8.c"
  1045 ;; Parameters:    Size  Location     Type
  1046 ;;  a               1    wreg     unsigned char 
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;  a               1    0[COMMON] unsigned char 
  1049 ;; Return value:  Size  Location     Type
  1050 ;;                  1    wreg      void 
  1051 ;; Registers used:
  1052 ;;		wreg
  1053 ;; Tracked objects:
  1054 ;;		On entry : 0/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1058 ;;      Params:         0       0       0       0       0
  1059 ;;      Locals:         1       0       0       0       0
  1060 ;;      Temps:          0       0       0       0       0
  1061 ;;      Totals:         1       0       0       0       0
  1062 ;;Total ram usage:        1 bytes
  1063 ;; Hardware stack levels used: 1
  1064 ;; This function calls:
  1065 ;;		Nothing
  1066 ;; This function is called by:
  1067 ;;		_Lcd8_Init
  1068 ;; This function uses a non-reentrant model
  1069 ;;
  1070                           
  1071  0560                     _Lcd8_Port:	
  1072                           ;psect for function _Lcd8_Port
  1073                           
  1074                           
  1075                           ;incstack = 0
  1076                           ; Regs used in _Lcd8_Port: [wreg]
  1077                           ;Lcd8_Port@a stored from wreg
  1078  0560  00F0               	movwf	Lcd8_Port@a
  1079  0561                     l745:
  1080                           
  1081                           ;lcd8.c: 14: void Lcd8_Port(char a);lcd8.c: 15: {;lcd8.c: 16:     PORTD=a;
  1082  0561  0870               	movf	Lcd8_Port@a,w
  1083  0562  1283               	bcf	3,5	;RP0=0, select bank0
  1084  0563  1303               	bcf	3,6	;RP1=0, select bank0
  1085  0564  0088               	movwf	8	;volatile
  1086  0565                     l123:
  1087  0565  0008               	return
  1088  0566                     __end_of_Lcd8_Port:
  1089                           
  1090                           	psect	text4
  1091  0657                     __ptext4:	
  1092 ;; *************** function _I2C_Master_Init *****************
  1093 ;; Defined at:
  1094 ;;		line 14 in file "I2C.c"
  1095 ;; Parameters:    Size  Location     Type
  1096 ;;  c               4    0[BANK0 ] const unsigned long 
  1097 ;; Auto vars:     Size  Location     Type
  1098 ;;		None
  1099 ;; Return value:  Size  Location     Type
  1100 ;;                  1    wreg      void 
  1101 ;; Registers used:
  1102 ;;		wreg, status,2, status,0, pclath, cstack
  1103 ;; Tracked objects:
  1104 ;;		On entry : 0/0
  1105 ;;		On exit  : 0/0
  1106 ;;		Unchanged: 0/0
  1107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1108 ;;      Params:         0       4       0       0       0
  1109 ;;      Locals:         0       0       0       0       0
  1110 ;;      Temps:          0       4       0       0       0
  1111 ;;      Totals:         0       8       0       0       0
  1112 ;;Total ram usage:        8 bytes
  1113 ;; Hardware stack levels used: 1
  1114 ;; Hardware stack levels required when called: 1
  1115 ;; This function calls:
  1116 ;;		___lldiv
  1117 ;; This function is called by:
  1118 ;;		_setup
  1119 ;; This function uses a non-reentrant model
  1120 ;;
  1121                           
  1122  0657                     _I2C_Master_Init:	
  1123                           ;psect for function _I2C_Master_Init
  1124                           
  1125  0657                     l995:	
  1126                           ;incstack = 0
  1127                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1128                           
  1129                           
  1130                           ;I2C.c: 14: void I2C_Master_Init(const unsigned long c);I2C.c: 15: {;I2C.c: 16:     SSPC
      +                          ON = 0b00101000;
  1131  0657  3028               	movlw	40
  1132  0658  1283               	bcf	3,5	;RP0=0, select bank0
  1133  0659  1303               	bcf	3,6	;RP1=0, select bank0
  1134  065A  0094               	movwf	20	;volatile
  1135  065B                     l997:
  1136                           
  1137                           ;I2C.c: 17:     SSPCON2 = 0;
  1138  065B  1683               	bsf	3,5	;RP0=1, select bank1
  1139  065C  1303               	bcf	3,6	;RP1=0, select bank1
  1140  065D  0191               	clrf	17	;volatile
  1141  065E                     l999:
  1142                           
  1143                           ;I2C.c: 18:     SSPADD = (8000000/(4*c))-1;
  1144  065E  1283               	bcf	3,5	;RP0=0, select bank0
  1145  065F  1303               	bcf	3,6	;RP1=0, select bank0
  1146  0660  0820               	movf	I2C_Master_Init@c,w
  1147  0661  00A4               	movwf	??_I2C_Master_Init
  1148  0662  0821               	movf	I2C_Master_Init@c+1,w
  1149  0663  00A5               	movwf	??_I2C_Master_Init+1
  1150  0664  0822               	movf	I2C_Master_Init@c+2,w
  1151  0665  00A6               	movwf	??_I2C_Master_Init+2
  1152  0666  0823               	movf	I2C_Master_Init@c+3,w
  1153  0667  00A7               	movwf	??_I2C_Master_Init+3
  1154  0668  3002               	movlw	2
  1155  0669                     u225:
  1156  0669  1003               	clrc
  1157  066A  0DA4               	rlf	??_I2C_Master_Init,f
  1158  066B  0DA5               	rlf	??_I2C_Master_Init+1,f
  1159  066C  0DA6               	rlf	??_I2C_Master_Init+2,f
  1160  066D  0DA7               	rlf	??_I2C_Master_Init+3,f
  1161  066E                     u220:
  1162  066E  3EFF               	addlw	-1
  1163  066F  1D03               	skipz
  1164  0670  2E69               	goto	u225
  1165  0671  0827               	movf	??_I2C_Master_Init+3,w
  1166  0672  00F3               	movwf	___lldiv@divisor+3
  1167  0673  0826               	movf	??_I2C_Master_Init+2,w
  1168  0674  00F2               	movwf	___lldiv@divisor+2
  1169  0675  0825               	movf	??_I2C_Master_Init+1,w
  1170  0676  00F1               	movwf	___lldiv@divisor+1
  1171  0677  0824               	movf	??_I2C_Master_Init,w
  1172  0678  00F0               	movwf	___lldiv@divisor
  1173  0679  3000               	movlw	0
  1174  067A  00F7               	movwf	___lldiv@dividend+3
  1175  067B  307A               	movlw	122
  1176  067C  00F6               	movwf	___lldiv@dividend+2
  1177  067D  3012               	movlw	18
  1178  067E  00F5               	movwf	___lldiv@dividend+1
  1179  067F  3000               	movlw	0
  1180  0680  00F4               	movwf	___lldiv@dividend
  1181  0681  120A  118A  271B  120A  118A  	fcall	___lldiv
  1182  0686  0870               	movf	?___lldiv,w
  1183  0687  3EFF               	addlw	255
  1184  0688  1683               	bsf	3,5	;RP0=1, select bank1
  1185  0689  1303               	bcf	3,6	;RP1=0, select bank1
  1186  068A  0093               	movwf	19	;volatile
  1187  068B                     l1001:
  1188                           
  1189                           ;I2C.c: 19:     SSPSTAT = 0;
  1190  068B  0194               	clrf	20	;volatile
  1191  068C                     l1003:
  1192                           
  1193                           ;I2C.c: 20:     TRISCbits.TRISC3 = 1;
  1194  068C  1587               	bsf	7,3	;volatile
  1195  068D                     l1005:
  1196                           
  1197                           ;I2C.c: 21:     TRISCbits.TRISC4 = 1;
  1198  068D  1607               	bsf	7,4	;volatile
  1199  068E                     l76:
  1200  068E  0008               	return
  1201  068F                     __end_of_I2C_Master_Init:
  1202                           
  1203                           	psect	text5
  1204  071B                     __ptext5:	
  1205 ;; *************** function ___lldiv *****************
  1206 ;; Defined at:
  1207 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\__lldiv.c"
  1208 ;; Parameters:    Size  Location     Type
  1209 ;;  divisor         4    0[COMMON] unsigned long 
  1210 ;;  dividend        4    4[COMMON] unsigned long 
  1211 ;; Auto vars:     Size  Location     Type
  1212 ;;  quotient        4    9[COMMON] unsigned long 
  1213 ;;  counter         1   13[COMMON] unsigned char 
  1214 ;; Return value:  Size  Location     Type
  1215 ;;                  4    0[COMMON] unsigned long 
  1216 ;; Registers used:
  1217 ;;		wreg, status,2, status,0
  1218 ;; Tracked objects:
  1219 ;;		On entry : 0/0
  1220 ;;		On exit  : 0/0
  1221 ;;		Unchanged: 0/0
  1222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1223 ;;      Params:         8       0       0       0       0
  1224 ;;      Locals:         5       0       0       0       0
  1225 ;;      Temps:          1       0       0       0       0
  1226 ;;      Totals:        14       0       0       0       0
  1227 ;;Total ram usage:       14 bytes
  1228 ;; Hardware stack levels used: 1
  1229 ;; This function calls:
  1230 ;;		Nothing
  1231 ;; This function is called by:
  1232 ;;		_I2C_Master_Init
  1233 ;; This function uses a non-reentrant model
  1234 ;;
  1235                           
  1236  071B                     ___lldiv:	
  1237                           ;psect for function ___lldiv
  1238                           
  1239  071B                     l971:	
  1240                           ;incstack = 0
  1241                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1242                           
  1243  071B  3000               	movlw	0
  1244  071C  00FC               	movwf	___lldiv@quotient+3
  1245  071D  3000               	movlw	0
  1246  071E  00FB               	movwf	___lldiv@quotient+2
  1247  071F  3000               	movlw	0
  1248  0720  00FA               	movwf	___lldiv@quotient+1
  1249  0721  3000               	movlw	0
  1250  0722  00F9               	movwf	___lldiv@quotient
  1251  0723  0873               	movf	___lldiv@divisor+3,w
  1252  0724  0472               	iorwf	___lldiv@divisor+2,w
  1253  0725  0471               	iorwf	___lldiv@divisor+1,w
  1254  0726  0470               	iorwf	___lldiv@divisor,w
  1255  0727  1903               	skipnz
  1256  0728  2F2A               	goto	u151
  1257  0729  2F2B               	goto	u150
  1258  072A                     u151:
  1259  072A  2F78               	goto	l991
  1260  072B                     u150:
  1261  072B                     l973:
  1262  072B  01FD               	clrf	___lldiv@counter
  1263  072C  0AFD               	incf	___lldiv@counter,f
  1264  072D  2F3B               	goto	l977
  1265  072E                     l975:
  1266  072E  3001               	movlw	1
  1267  072F  00F8               	movwf	??___lldiv
  1268  0730                     u165:
  1269  0730  1003               	clrc
  1270  0731  0DF0               	rlf	___lldiv@divisor,f
  1271  0732  0DF1               	rlf	___lldiv@divisor+1,f
  1272  0733  0DF2               	rlf	___lldiv@divisor+2,f
  1273  0734  0DF3               	rlf	___lldiv@divisor+3,f
  1274  0735  0BF8               	decfsz	??___lldiv,f
  1275  0736  2F30               	goto	u165
  1276  0737  3001               	movlw	1
  1277  0738  00F8               	movwf	??___lldiv
  1278  0739  0878               	movf	??___lldiv,w
  1279  073A  07FD               	addwf	___lldiv@counter,f
  1280  073B                     l977:
  1281  073B  1FF3               	btfss	___lldiv@divisor+3,7
  1282  073C  2F3E               	goto	u171
  1283  073D  2F3F               	goto	u170
  1284  073E                     u171:
  1285  073E  2F2E               	goto	l975
  1286  073F                     u170:
  1287  073F                     l979:
  1288  073F  3001               	movlw	1
  1289  0740  00F8               	movwf	??___lldiv
  1290  0741                     u185:
  1291  0741  1003               	clrc
  1292  0742  0DF9               	rlf	___lldiv@quotient,f
  1293  0743  0DFA               	rlf	___lldiv@quotient+1,f
  1294  0744  0DFB               	rlf	___lldiv@quotient+2,f
  1295  0745  0DFC               	rlf	___lldiv@quotient+3,f
  1296  0746  0BF8               	decfsz	??___lldiv,f
  1297  0747  2F41               	goto	u185
  1298  0748                     l981:
  1299  0748  0873               	movf	___lldiv@divisor+3,w
  1300  0749  0277               	subwf	___lldiv@dividend+3,w
  1301  074A  1D03               	skipz
  1302  074B  2F56               	goto	u195
  1303  074C  0872               	movf	___lldiv@divisor+2,w
  1304  074D  0276               	subwf	___lldiv@dividend+2,w
  1305  074E  1D03               	skipz
  1306  074F  2F56               	goto	u195
  1307  0750  0871               	movf	___lldiv@divisor+1,w
  1308  0751  0275               	subwf	___lldiv@dividend+1,w
  1309  0752  1D03               	skipz
  1310  0753  2F56               	goto	u195
  1311  0754  0870               	movf	___lldiv@divisor,w
  1312  0755  0274               	subwf	___lldiv@dividend,w
  1313  0756                     u195:
  1314  0756  1C03               	skipc
  1315  0757  2F59               	goto	u191
  1316  0758  2F5A               	goto	u190
  1317  0759                     u191:
  1318  0759  2F69               	goto	l987
  1319  075A                     u190:
  1320  075A                     l983:
  1321  075A  0870               	movf	___lldiv@divisor,w
  1322  075B  02F4               	subwf	___lldiv@dividend,f
  1323  075C  0871               	movf	___lldiv@divisor+1,w
  1324  075D  1C03               	skipc
  1325  075E  0F71               	incfsz	___lldiv@divisor+1,w
  1326  075F  02F5               	subwf	___lldiv@dividend+1,f
  1327  0760  0872               	movf	___lldiv@divisor+2,w
  1328  0761  1C03               	skipc
  1329  0762  0F72               	incfsz	___lldiv@divisor+2,w
  1330  0763  02F6               	subwf	___lldiv@dividend+2,f
  1331  0764  0873               	movf	___lldiv@divisor+3,w
  1332  0765  1C03               	skipc
  1333  0766  0F73               	incfsz	___lldiv@divisor+3,w
  1334  0767  02F7               	subwf	___lldiv@dividend+3,f
  1335  0768                     l985:
  1336  0768  1479               	bsf	___lldiv@quotient,0
  1337  0769                     l987:
  1338  0769  3001               	movlw	1
  1339  076A                     u205:
  1340  076A  1003               	clrc
  1341  076B  0CF3               	rrf	___lldiv@divisor+3,f
  1342  076C  0CF2               	rrf	___lldiv@divisor+2,f
  1343  076D  0CF1               	rrf	___lldiv@divisor+1,f
  1344  076E  0CF0               	rrf	___lldiv@divisor,f
  1345  076F  3EFF               	addlw	-1
  1346  0770  1D03               	skipz
  1347  0771  2F6A               	goto	u205
  1348  0772                     l989:
  1349  0772  3001               	movlw	1
  1350  0773  02FD               	subwf	___lldiv@counter,f
  1351  0774  1D03               	btfss	3,2
  1352  0775  2F77               	goto	u211
  1353  0776  2F78               	goto	u210
  1354  0777                     u211:
  1355  0777  2F3F               	goto	l979
  1356  0778                     u210:
  1357  0778                     l991:
  1358  0778  087C               	movf	___lldiv@quotient+3,w
  1359  0779  00F3               	movwf	?___lldiv+3
  1360  077A  087B               	movf	___lldiv@quotient+2,w
  1361  077B  00F2               	movwf	?___lldiv+2
  1362  077C  087A               	movf	___lldiv@quotient+1,w
  1363  077D  00F1               	movwf	?___lldiv+1
  1364  077E  0879               	movf	___lldiv@quotient,w
  1365  077F  00F0               	movwf	?___lldiv
  1366  0780                     l275:
  1367  0780  0008               	return
  1368  0781                     __end_of___lldiv:
  1369                           
  1370                           	psect	text6
  1371  068F                     __ptext6:	
  1372 ;; *************** function _int_osc_MHz *****************
  1373 ;; Defined at:
  1374 ;;		line 11 in file "oscilador.c"
  1375 ;; Parameters:    Size  Location     Type
  1376 ;;  freq            1    wreg     unsigned char 
  1377 ;; Auto vars:     Size  Location     Type
  1378 ;;  freq            1    2[COMMON] unsigned char 
  1379 ;; Return value:  Size  Location     Type
  1380 ;;                  1    wreg      void 
  1381 ;; Registers used:
  1382 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1383 ;; Tracked objects:
  1384 ;;		On entry : 0/0
  1385 ;;		On exit  : 0/0
  1386 ;;		Unchanged: 0/0
  1387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1388 ;;      Params:         0       0       0       0       0
  1389 ;;      Locals:         1       0       0       0       0
  1390 ;;      Temps:          2       0       0       0       0
  1391 ;;      Totals:         3       0       0       0       0
  1392 ;;Total ram usage:        3 bytes
  1393 ;; Hardware stack levels used: 1
  1394 ;; This function calls:
  1395 ;;		Nothing
  1396 ;; This function is called by:
  1397 ;;		_main
  1398 ;; This function uses a non-reentrant model
  1399 ;;
  1400                           
  1401  068F                     _int_osc_MHz:	
  1402                           ;psect for function _int_osc_MHz
  1403                           
  1404                           
  1405                           ;incstack = 0
  1406                           ; Regs used in _int_osc_MHz: [wreg-fsr0h+status,2+status,0]
  1407                           ;int_osc_MHz@freq stored from wreg
  1408  068F  00F2               	movwf	int_osc_MHz@freq
  1409  0690                     l825:
  1410                           
  1411                           ;oscilador.c: 12:     switch(freq){
  1412  0690  2EB0               	goto	l839
  1413  0691                     l827:
  1414                           
  1415                           ;oscilador.c: 14:             OSCCONbits.IRCF = 0b100;
  1416  0691  1683               	bsf	3,5	;RP0=1, select bank1
  1417  0692  1303               	bcf	3,6	;RP1=0, select bank1
  1418  0693  080F               	movf	15,w	;volatile
  1419  0694  398F               	andlw	-113
  1420  0695  3840               	iorlw	64
  1421  0696  008F               	movwf	15	;volatile
  1422                           
  1423                           ;oscilador.c: 15:             break;
  1424  0697  2EC6               	goto	l109
  1425  0698                     l829:
  1426                           
  1427                           ;oscilador.c: 17:             OSCCONbits.IRCF = 0b101;
  1428  0698  1683               	bsf	3,5	;RP0=1, select bank1
  1429  0699  1303               	bcf	3,6	;RP1=0, select bank1
  1430  069A  080F               	movf	15,w	;volatile
  1431  069B  398F               	andlw	-113
  1432  069C  3850               	iorlw	80
  1433  069D  008F               	movwf	15	;volatile
  1434                           
  1435                           ;oscilador.c: 18:             break;
  1436  069E  2EC6               	goto	l109
  1437  069F                     l831:
  1438                           
  1439                           ;oscilador.c: 20:             OSCCONbits.IRCF = 0b110;
  1440  069F  1683               	bsf	3,5	;RP0=1, select bank1
  1441  06A0  1303               	bcf	3,6	;RP1=0, select bank1
  1442  06A1  080F               	movf	15,w	;volatile
  1443  06A2  398F               	andlw	-113
  1444  06A3  3860               	iorlw	96
  1445  06A4  008F               	movwf	15	;volatile
  1446                           
  1447                           ;oscilador.c: 21:             break;
  1448  06A5  2EC6               	goto	l109
  1449  06A6                     l833:
  1450                           
  1451                           ;oscilador.c: 23:             OSCCONbits.IRCF = 0b111;
  1452  06A6  3070               	movlw	112
  1453  06A7  1683               	bsf	3,5	;RP0=1, select bank1
  1454  06A8  1303               	bcf	3,6	;RP1=0, select bank1
  1455  06A9  048F               	iorwf	15,f	;volatile
  1456                           
  1457                           ;oscilador.c: 24:             break;
  1458  06AA  2EC6               	goto	l109
  1459  06AB                     l835:
  1460                           
  1461                           ;oscilador.c: 26:             OSCCONbits.IRCF = 0b111;
  1462  06AB  3070               	movlw	112
  1463  06AC  1683               	bsf	3,5	;RP0=1, select bank1
  1464  06AD  1303               	bcf	3,6	;RP1=0, select bank1
  1465  06AE  048F               	iorwf	15,f	;volatile
  1466                           
  1467                           ;oscilador.c: 27:             break;
  1468  06AF  2EC6               	goto	l109
  1469  06B0                     l839:
  1470  06B0  0872               	movf	int_osc_MHz@freq,w
  1471  06B1  00F0               	movwf	??_int_osc_MHz
  1472  06B2  01F1               	clrf	??_int_osc_MHz+1
  1473                           
  1474                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1475                           ; Switch size 1, requested type "simple"
  1476                           ; Number of cases is 1, Range of values is 0 to 0
  1477                           ; switch strategies available:
  1478                           ; Name         Instructions Cycles
  1479                           ; simple_byte            4     3 (average)
  1480                           ; direct_byte           11     8 (fixed)
  1481                           ; jumptable            260     6 (fixed)
  1482                           ;	Chosen strategy is simple_byte
  1483  06B3  0871               	movf	??_int_osc_MHz+1,w
  1484  06B4  3A00               	xorlw	0	; case 0
  1485  06B5  1903               	skipnz
  1486  06B6  2EB8               	goto	l1101
  1487  06B7  2EAB               	goto	l835
  1488  06B8                     l1101:
  1489                           
  1490                           ; Switch size 1, requested type "simple"
  1491                           ; Number of cases is 4, Range of values is 1 to 8
  1492                           ; switch strategies available:
  1493                           ; Name         Instructions Cycles
  1494                           ; simple_byte           13     7 (average)
  1495                           ; direct_byte           35    11 (fixed)
  1496                           ; jumptable            263     9 (fixed)
  1497                           ;	Chosen strategy is simple_byte
  1498  06B8  0870               	movf	??_int_osc_MHz,w
  1499  06B9  3A01               	xorlw	1	; case 1
  1500  06BA  1903               	skipnz
  1501  06BB  2E91               	goto	l827
  1502  06BC  3A03               	xorlw	3	; case 2
  1503  06BD  1903               	skipnz
  1504  06BE  2E98               	goto	l829
  1505  06BF  3A06               	xorlw	6	; case 4
  1506  06C0  1903               	skipnz
  1507  06C1  2E9F               	goto	l831
  1508  06C2  3A0C               	xorlw	12	; case 8
  1509  06C3  1903               	skipnz
  1510  06C4  2EA6               	goto	l833
  1511  06C5  2EAB               	goto	l835
  1512  06C6                     l109:
  1513                           
  1514                           ;oscilador.c: 29:     OSCCONbits.SCS = 1;
  1515  06C6  140F               	bsf	15,0	;volatile
  1516  06C7                     l114:
  1517  06C7  0008               	return
  1518  06C8                     __end_of_int_osc_MHz:
  1519                           
  1520                           	psect	text7
  1521  0628                     __ptext7:	
  1522 ;; *************** function _Lcd8_Write_String *****************
  1523 ;; Defined at:
  1524 ;;		line 76 in file "lcd8.c"
  1525 ;; Parameters:    Size  Location     Type
  1526 ;;  a               2    2[COMMON] PTR unsigned char 
  1527 ;;		 -> RAM(512), 
  1528 ;; Auto vars:     Size  Location     Type
  1529 ;;  i               2    6[COMMON] int 
  1530 ;; Return value:  Size  Location     Type
  1531 ;;                  1    wreg      void 
  1532 ;; Registers used:
  1533 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1534 ;; Tracked objects:
  1535 ;;		On entry : 0/0
  1536 ;;		On exit  : 0/0
  1537 ;;		Unchanged: 0/0
  1538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1539 ;;      Params:         2       0       0       0       0
  1540 ;;      Locals:         2       0       0       0       0
  1541 ;;      Temps:          2       0       0       0       0
  1542 ;;      Totals:         6       0       0       0       0
  1543 ;;Total ram usage:        6 bytes
  1544 ;; Hardware stack levels used: 1
  1545 ;; Hardware stack levels required when called: 1
  1546 ;; This function calls:
  1547 ;;		_Lcd8_Write_Char
  1548 ;; This function is called by:
  1549 ;;		_main
  1550 ;; This function uses a non-reentrant model
  1551 ;;
  1552                           
  1553  0628                     _Lcd8_Write_String:	
  1554                           ;psect for function _Lcd8_Write_String
  1555                           
  1556  0628                     l1047:	
  1557                           ;incstack = 0
  1558                           ; Regs used in _Lcd8_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1559                           
  1560                           
  1561                           ;lcd8.c: 77:     int i;;lcd8.c: 78:     for (i = 0; a[i] != '\0'; i++)
  1562  0628  01F6               	clrf	Lcd8_Write_String@i
  1563  0629  01F7               	clrf	Lcd8_Write_String@i+1
  1564  062A  2E44               	goto	l1053
  1565  062B                     l1049:
  1566                           
  1567                           ;lcd8.c: 79:         Lcd8_Write_Char(a[i]);
  1568  062B  0876               	movf	Lcd8_Write_String@i,w
  1569  062C  0772               	addwf	Lcd8_Write_String@a,w
  1570  062D  00F4               	movwf	??_Lcd8_Write_String
  1571  062E  0877               	movf	Lcd8_Write_String@i+1,w
  1572  062F  1803               	skipnc
  1573  0630  0A77               	incf	Lcd8_Write_String@i+1,w
  1574  0631  0773               	addwf	Lcd8_Write_String@a+1,w
  1575  0632  00F5               	movwf	??_Lcd8_Write_String+1
  1576  0633  0874               	movf	??_Lcd8_Write_String,w
  1577  0634  0084               	movwf	4
  1578  0635  1783               	bsf	3,7
  1579  0636  1C75               	btfss	??_Lcd8_Write_String+1,0
  1580  0637  1383               	bcf	3,7
  1581  0638  0800               	movf	0,w
  1582  0639  120A  118A  258F  120A  118A  	fcall	_Lcd8_Write_Char
  1583  063E                     l1051:
  1584  063E  3001               	movlw	1
  1585  063F  07F6               	addwf	Lcd8_Write_String@i,f
  1586  0640  1803               	skipnc
  1587  0641  0AF7               	incf	Lcd8_Write_String@i+1,f
  1588  0642  3000               	movlw	0
  1589  0643  07F7               	addwf	Lcd8_Write_String@i+1,f
  1590  0644                     l1053:
  1591  0644  0876               	movf	Lcd8_Write_String@i,w
  1592  0645  0772               	addwf	Lcd8_Write_String@a,w
  1593  0646  00F4               	movwf	??_Lcd8_Write_String
  1594  0647  0877               	movf	Lcd8_Write_String@i+1,w
  1595  0648  1803               	skipnc
  1596  0649  0A77               	incf	Lcd8_Write_String@i+1,w
  1597  064A  0773               	addwf	Lcd8_Write_String@a+1,w
  1598  064B  00F5               	movwf	??_Lcd8_Write_String+1
  1599  064C  0874               	movf	??_Lcd8_Write_String,w
  1600  064D  0084               	movwf	4
  1601  064E  1783               	bsf	3,7
  1602  064F  1C75               	btfss	??_Lcd8_Write_String+1,0
  1603  0650  1383               	bcf	3,7
  1604  0651  0800               	movf	0,w
  1605  0652  1D03               	btfss	3,2
  1606  0653  2E55               	goto	u261
  1607  0654  2E56               	goto	u260
  1608  0655                     u261:
  1609  0655  2E2B               	goto	l1049
  1610  0656                     u260:
  1611  0656                     l147:
  1612  0656  0008               	return
  1613  0657                     __end_of_Lcd8_Write_String:
  1614                           
  1615                           	psect	text8
  1616  058F                     __ptext8:	
  1617 ;; *************** function _Lcd8_Write_Char *****************
  1618 ;; Defined at:
  1619 ;;		line 67 in file "lcd8.c"
  1620 ;; Parameters:    Size  Location     Type
  1621 ;;  a               1    wreg     unsigned char 
  1622 ;; Auto vars:     Size  Location     Type
  1623 ;;  a               1    1[COMMON] unsigned char 
  1624 ;; Return value:  Size  Location     Type
  1625 ;;                  1    wreg      void 
  1626 ;; Registers used:
  1627 ;;		wreg
  1628 ;; Tracked objects:
  1629 ;;		On entry : 0/0
  1630 ;;		On exit  : 0/0
  1631 ;;		Unchanged: 0/0
  1632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1633 ;;      Params:         0       0       0       0       0
  1634 ;;      Locals:         1       0       0       0       0
  1635 ;;      Temps:          1       0       0       0       0
  1636 ;;      Totals:         2       0       0       0       0
  1637 ;;Total ram usage:        2 bytes
  1638 ;; Hardware stack levels used: 1
  1639 ;; This function calls:
  1640 ;;		Nothing
  1641 ;; This function is called by:
  1642 ;;		_Lcd8_Write_String
  1643 ;; This function uses a non-reentrant model
  1644 ;;
  1645                           
  1646  058F                     _Lcd8_Write_Char:	
  1647                           ;psect for function _Lcd8_Write_Char
  1648                           
  1649                           
  1650                           ;incstack = 0
  1651                           ; Regs used in _Lcd8_Write_Char: [wreg]
  1652                           ;Lcd8_Write_Char@a stored from wreg
  1653  058F  00F1               	movwf	Lcd8_Write_Char@a
  1654  0590                     l817:
  1655                           
  1656                           ;lcd8.c: 69:     PORTCbits.RC0 = 1;
  1657  0590  1283               	bcf	3,5	;RP0=0, select bank0
  1658  0591  1303               	bcf	3,6	;RP1=0, select bank0
  1659  0592  1407               	bsf	7,0	;volatile
  1660  0593                     l819:
  1661                           
  1662                           ;lcd8.c: 70:     PORTD=a;
  1663  0593  0871               	movf	Lcd8_Write_Char@a,w
  1664  0594  0088               	movwf	8	;volatile
  1665  0595                     l821:
  1666                           
  1667                           ;lcd8.c: 71:     PORTCbits.RC1 = 1;
  1668  0595  1487               	bsf	7,1	;volatile
  1669                           
  1670                           ;lcd8.c: 72:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1671  0596  301A               	movlw	26
  1672  0597  00F0               	movwf	??_Lcd8_Write_Char
  1673  0598                     u337:
  1674  0598  0BF0               	decfsz	??_Lcd8_Write_Char,f
  1675  0599  2D98               	goto	u337
  1676  059A  0000               	nop
  1677  059B                     l823:
  1678                           
  1679                           ;lcd8.c: 73:     PORTCbits.RC1 = 0;
  1680  059B  1283               	bcf	3,5	;RP0=0, select bank0
  1681  059C  1303               	bcf	3,6	;RP1=0, select bank0
  1682  059D  1087               	bcf	7,1	;volatile
  1683  059E                     l141:
  1684  059E  0008               	return
  1685  059F                     __end_of_Lcd8_Write_Char:
  1686                           
  1687                           	psect	text9
  1688  05D6                     __ptext9:	
  1689 ;; *************** function _Lcd8_Set_Cursor *****************
  1690 ;; Defined at:
  1691 ;;		line 33 in file "lcd8.c"
  1692 ;; Parameters:    Size  Location     Type
  1693 ;;  a               1    wreg     unsigned char 
  1694 ;;  b               1    3[COMMON] unsigned char 
  1695 ;; Auto vars:     Size  Location     Type
  1696 ;;  a               1    5[COMMON] unsigned char 
  1697 ;;  x               1    6[COMMON] unsigned char 
  1698 ;; Return value:  Size  Location     Type
  1699 ;;                  1    wreg      void 
  1700 ;; Registers used:
  1701 ;;		wreg, status,2, status,0, pclath, cstack
  1702 ;; Tracked objects:
  1703 ;;		On entry : 0/0
  1704 ;;		On exit  : 0/0
  1705 ;;		Unchanged: 0/0
  1706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1707 ;;      Params:         1       0       0       0       0
  1708 ;;      Locals:         2       0       0       0       0
  1709 ;;      Temps:          1       0       0       0       0
  1710 ;;      Totals:         4       0       0       0       0
  1711 ;;Total ram usage:        4 bytes
  1712 ;; Hardware stack levels used: 1
  1713 ;; Hardware stack levels required when called: 1
  1714 ;; This function calls:
  1715 ;;		_Lcd8_Cmd
  1716 ;; This function is called by:
  1717 ;;		_main
  1718 ;; This function uses a non-reentrant model
  1719 ;;
  1720                           
  1721  05D6                     _Lcd8_Set_Cursor:	
  1722                           ;psect for function _Lcd8_Set_Cursor
  1723                           
  1724                           
  1725                           ;incstack = 0
  1726                           ; Regs used in _Lcd8_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1727                           ;Lcd8_Set_Cursor@a stored from wreg
  1728  05D6  00F5               	movwf	Lcd8_Set_Cursor@a
  1729  05D7                     l1019:
  1730                           
  1731                           ;lcd8.c: 33: void Lcd8_Set_Cursor(char a, char b);lcd8.c: 34: {;lcd8.c: 35:     char x;;
      +                          lcd8.c: 36:     if (a == 1) {
  1732  05D7  0375               	decf	Lcd8_Set_Cursor@a,w
  1733  05D8  1D03               	btfss	3,2
  1734  05D9  2DDB               	goto	u231
  1735  05DA  2DDC               	goto	u230
  1736  05DB                     u231:
  1737  05DB  2DE8               	goto	l1025
  1738  05DC                     u230:
  1739  05DC                     l1021:
  1740                           
  1741                           ;lcd8.c: 38:         x = 0x80 + b - 1;
  1742  05DC  0873               	movf	Lcd8_Set_Cursor@b,w
  1743  05DD  3E7F               	addlw	127
  1744  05DE  00F4               	movwf	??_Lcd8_Set_Cursor
  1745  05DF  0874               	movf	??_Lcd8_Set_Cursor,w
  1746  05E0  00F6               	movwf	Lcd8_Set_Cursor@x
  1747  05E1                     l1023:
  1748                           
  1749                           ;lcd8.c: 39:         Lcd8_Cmd(x);
  1750  05E1  0876               	movf	Lcd8_Set_Cursor@x,w
  1751  05E2  120A  118A  259F  120A  118A  	fcall	_Lcd8_Cmd
  1752                           
  1753                           ;lcd8.c: 40:     }
  1754  05E7  2DF9               	goto	l135
  1755  05E8                     l1025:
  1756  05E8  3002               	movlw	2
  1757  05E9  0675               	xorwf	Lcd8_Set_Cursor@a,w
  1758  05EA  1D03               	btfss	3,2
  1759  05EB  2DED               	goto	u241
  1760  05EC  2DEE               	goto	u240
  1761  05ED                     u241:
  1762  05ED  2DF9               	goto	l135
  1763  05EE                     u240:
  1764  05EE                     l1027:
  1765                           
  1766                           ;lcd8.c: 43:         x = 0xC0 + b - 1;
  1767  05EE  0873               	movf	Lcd8_Set_Cursor@b,w
  1768  05EF  3EBF               	addlw	191
  1769  05F0  00F4               	movwf	??_Lcd8_Set_Cursor
  1770  05F1  0874               	movf	??_Lcd8_Set_Cursor,w
  1771  05F2  00F6               	movwf	Lcd8_Set_Cursor@x
  1772  05F3                     l1029:
  1773                           
  1774                           ;lcd8.c: 44:         Lcd8_Cmd(x);
  1775  05F3  0876               	movf	Lcd8_Set_Cursor@x,w
  1776  05F4  120A  118A  259F  120A  118A  	fcall	_Lcd8_Cmd
  1777  05F9                     l135:
  1778  05F9  0008               	return
  1779  05FA                     __end_of_Lcd8_Set_Cursor:
  1780                           
  1781                           	psect	text10
  1782  059F                     __ptext10:	
  1783 ;; *************** function _Lcd8_Cmd *****************
  1784 ;; Defined at:
  1785 ;;		line 19 in file "lcd8.c"
  1786 ;; Parameters:    Size  Location     Type
  1787 ;;  a               1    wreg     unsigned char 
  1788 ;; Auto vars:     Size  Location     Type
  1789 ;;  a               1    2[COMMON] unsigned char 
  1790 ;; Return value:  Size  Location     Type
  1791 ;;                  1    wreg      void 
  1792 ;; Registers used:
  1793 ;;		wreg
  1794 ;; Tracked objects:
  1795 ;;		On entry : 0/0
  1796 ;;		On exit  : 0/0
  1797 ;;		Unchanged: 0/0
  1798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1799 ;;      Params:         0       0       0       0       0
  1800 ;;      Locals:         1       0       0       0       0
  1801 ;;      Temps:          2       0       0       0       0
  1802 ;;      Totals:         3       0       0       0       0
  1803 ;;Total ram usage:        3 bytes
  1804 ;; Hardware stack levels used: 1
  1805 ;; This function calls:
  1806 ;;		Nothing
  1807 ;; This function is called by:
  1808 ;;		_Lcd8_Set_Cursor
  1809 ;;		_Lcd8_Init
  1810 ;;		_Lcd8_Clear
  1811 ;;		_Lcd8_Shift_Right
  1812 ;;		_Lcd8_Shift_Left
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816  059F                     _Lcd8_Cmd:	
  1817                           ;psect for function _Lcd8_Cmd
  1818                           
  1819                           
  1820                           ;incstack = 0
  1821                           ; Regs used in _Lcd8_Cmd: [wreg]
  1822                           ;Lcd8_Cmd@a stored from wreg
  1823  059F  00F2               	movwf	Lcd8_Cmd@a
  1824  05A0                     l747:
  1825                           
  1826                           ;lcd8.c: 19: void Lcd8_Cmd(char a);lcd8.c: 20: {;lcd8.c: 21:     PORTCbits.RC0 = 0;
  1827  05A0  1283               	bcf	3,5	;RP0=0, select bank0
  1828  05A1  1303               	bcf	3,6	;RP1=0, select bank0
  1829  05A2  1007               	bcf	7,0	;volatile
  1830  05A3                     l749:
  1831                           
  1832                           ;lcd8.c: 22:     PORTD=a;
  1833  05A3  0872               	movf	Lcd8_Cmd@a,w
  1834  05A4  0088               	movwf	8	;volatile
  1835  05A5                     l751:
  1836                           
  1837                           ;lcd8.c: 23:     PORTCbits.RC1 = 1;
  1838  05A5  1487               	bsf	7,1	;volatile
  1839                           
  1840                           ;lcd8.c: 24:     _delay((unsigned long)((4)*(8000000/4000.0)));
  1841  05A6  300B               	movlw	11
  1842  05A7  00F1               	movwf	??_Lcd8_Cmd+1
  1843  05A8  3062               	movlw	98
  1844  05A9  00F0               	movwf	??_Lcd8_Cmd
  1845  05AA                     u347:
  1846  05AA  0BF0               	decfsz	??_Lcd8_Cmd,f
  1847  05AB  2DAA               	goto	u347
  1848  05AC  0BF1               	decfsz	??_Lcd8_Cmd+1,f
  1849  05AD  2DAA               	goto	u347
  1850  05AE  0000               	nop
  1851  05AF                     l753:
  1852                           
  1853                           ;lcd8.c: 25:     PORTCbits.RC1 = 0;
  1854  05AF  1283               	bcf	3,5	;RP0=0, select bank0
  1855  05B0  1303               	bcf	3,6	;RP1=0, select bank0
  1856  05B1  1087               	bcf	7,1	;volatile
  1857  05B2                     l126:
  1858  05B2  0008               	return
  1859  05B3                     __end_of_Lcd8_Cmd:
  1860                           
  1861                           	psect	text11
  1862  0578                     __ptext11:	
  1863 ;; *************** function _I2C_Master_Write *****************
  1864 ;; Defined at:
  1865 ;;		line 47 in file "I2C.c"
  1866 ;; Parameters:    Size  Location     Type
  1867 ;;  d               2    0[COMMON] unsigned int 
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;		None
  1870 ;; Return value:  Size  Location     Type
  1871 ;;                  1    wreg      void 
  1872 ;; Registers used:
  1873 ;;		wreg, status,2, status,0, pclath, cstack
  1874 ;; Tracked objects:
  1875 ;;		On entry : 0/0
  1876 ;;		On exit  : 0/0
  1877 ;;		Unchanged: 0/0
  1878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1879 ;;      Params:         2       0       0       0       0
  1880 ;;      Locals:         0       0       0       0       0
  1881 ;;      Temps:          0       0       0       0       0
  1882 ;;      Totals:         2       0       0       0       0
  1883 ;;Total ram usage:        2 bytes
  1884 ;; Hardware stack levels used: 1
  1885 ;; Hardware stack levels required when called: 1
  1886 ;; This function calls:
  1887 ;;		_I2C_Master_Wait
  1888 ;; This function is called by:
  1889 ;;		_main
  1890 ;; This function uses a non-reentrant model
  1891 ;;
  1892                           
  1893  0578                     _I2C_Master_Write:	
  1894                           ;psect for function _I2C_Master_Write
  1895                           
  1896  0578                     l1015:	
  1897                           ;incstack = 0
  1898                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  1899                           
  1900                           
  1901                           ;I2C.c: 47: void I2C_Master_Write(unsigned d);I2C.c: 48: {;I2C.c: 49:     I2C_Master_Wai
      +                          t();
  1902  0578  120A  118A  2582  120A  118A  	fcall	_I2C_Master_Wait
  1903  057D                     l1017:
  1904                           
  1905                           ;I2C.c: 50:     SSPBUF = d;
  1906  057D  0870               	movf	I2C_Master_Write@d,w
  1907  057E  1283               	bcf	3,5	;RP0=0, select bank0
  1908  057F  1303               	bcf	3,6	;RP1=0, select bank0
  1909  0580  0093               	movwf	19	;volatile
  1910  0581                     l94:
  1911  0581  0008               	return
  1912  0582                     __end_of_I2C_Master_Write:
  1913                           
  1914                           	psect	text12
  1915  056F                     __ptext12:	
  1916 ;; *************** function _I2C_Master_Stop *****************
  1917 ;; Defined at:
  1918 ;;		line 41 in file "I2C.c"
  1919 ;; Parameters:    Size  Location     Type
  1920 ;;		None
  1921 ;; Auto vars:     Size  Location     Type
  1922 ;;		None
  1923 ;; Return value:  Size  Location     Type
  1924 ;;                  1    wreg      void 
  1925 ;; Registers used:
  1926 ;;		wreg, status,2, status,0, pclath, cstack
  1927 ;; Tracked objects:
  1928 ;;		On entry : 0/0
  1929 ;;		On exit  : 0/0
  1930 ;;		Unchanged: 0/0
  1931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1932 ;;      Params:         0       0       0       0       0
  1933 ;;      Locals:         0       0       0       0       0
  1934 ;;      Temps:          0       0       0       0       0
  1935 ;;      Totals:         0       0       0       0       0
  1936 ;;Total ram usage:        0 bytes
  1937 ;; Hardware stack levels used: 1
  1938 ;; Hardware stack levels required when called: 1
  1939 ;; This function calls:
  1940 ;;		_I2C_Master_Wait
  1941 ;; This function is called by:
  1942 ;;		_main
  1943 ;; This function uses a non-reentrant model
  1944 ;;
  1945                           
  1946  056F                     _I2C_Master_Stop:	
  1947                           ;psect for function _I2C_Master_Stop
  1948                           
  1949  056F                     l861:	
  1950                           ;incstack = 0
  1951                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  1952                           
  1953                           
  1954                           ;I2C.c: 43:     I2C_Master_Wait();
  1955  056F  120A  118A  2582  120A  118A  	fcall	_I2C_Master_Wait
  1956  0574                     l863:
  1957                           
  1958                           ;I2C.c: 44:     SSPCON2bits.PEN = 1;
  1959  0574  1683               	bsf	3,5	;RP0=1, select bank1
  1960  0575  1303               	bcf	3,6	;RP1=0, select bank1
  1961  0576  1511               	bsf	17,2	;volatile
  1962  0577                     l91:
  1963  0577  0008               	return
  1964  0578                     __end_of_I2C_Master_Stop:
  1965                           
  1966                           	psect	text13
  1967  0566                     __ptext13:	
  1968 ;; *************** function _I2C_Master_Start *****************
  1969 ;; Defined at:
  1970 ;;		line 29 in file "I2C.c"
  1971 ;; Parameters:    Size  Location     Type
  1972 ;;		None
  1973 ;; Auto vars:     Size  Location     Type
  1974 ;;		None
  1975 ;; Return value:  Size  Location     Type
  1976 ;;                  1    wreg      void 
  1977 ;; Registers used:
  1978 ;;		wreg, status,2, status,0, pclath, cstack
  1979 ;; Tracked objects:
  1980 ;;		On entry : 0/0
  1981 ;;		On exit  : 0/0
  1982 ;;		Unchanged: 0/0
  1983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1984 ;;      Params:         0       0       0       0       0
  1985 ;;      Locals:         0       0       0       0       0
  1986 ;;      Temps:          0       0       0       0       0
  1987 ;;      Totals:         0       0       0       0       0
  1988 ;;Total ram usage:        0 bytes
  1989 ;; Hardware stack levels used: 1
  1990 ;; Hardware stack levels required when called: 1
  1991 ;; This function calls:
  1992 ;;		_I2C_Master_Wait
  1993 ;; This function is called by:
  1994 ;;		_main
  1995 ;; This function uses a non-reentrant model
  1996 ;;
  1997                           
  1998  0566                     _I2C_Master_Start:	
  1999                           ;psect for function _I2C_Master_Start
  2000                           
  2001  0566                     l853:	
  2002                           ;incstack = 0
  2003                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2004                           
  2005                           
  2006                           ;I2C.c: 31:     I2C_Master_Wait();
  2007  0566  120A  118A  2582  120A  118A  	fcall	_I2C_Master_Wait
  2008  056B                     l855:
  2009                           
  2010                           ;I2C.c: 32:     SSPCON2bits.SEN = 1;
  2011  056B  1683               	bsf	3,5	;RP0=1, select bank1
  2012  056C  1303               	bcf	3,6	;RP1=0, select bank1
  2013  056D  1411               	bsf	17,0	;volatile
  2014  056E                     l85:
  2015  056E  0008               	return
  2016  056F                     __end_of_I2C_Master_Start:
  2017                           
  2018                           	psect	text14
  2019  05FA                     __ptext14:	
  2020 ;; *************** function _I2C_Master_Read *****************
  2021 ;; Defined at:
  2022 ;;		line 53 in file "I2C.c"
  2023 ;; Parameters:    Size  Location     Type
  2024 ;;  a               2    0[COMMON] unsigned short 
  2025 ;; Auto vars:     Size  Location     Type
  2026 ;;  temp            2    4[COMMON] unsigned short 
  2027 ;; Return value:  Size  Location     Type
  2028 ;;                  2    0[COMMON] unsigned short 
  2029 ;; Registers used:
  2030 ;;		wreg, status,2, status,0, pclath, cstack
  2031 ;; Tracked objects:
  2032 ;;		On entry : 0/0
  2033 ;;		On exit  : 0/0
  2034 ;;		Unchanged: 0/0
  2035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2036 ;;      Params:         2       0       0       0       0
  2037 ;;      Locals:         2       0       0       0       0
  2038 ;;      Temps:          2       0       0       0       0
  2039 ;;      Totals:         6       0       0       0       0
  2040 ;;Total ram usage:        6 bytes
  2041 ;; Hardware stack levels used: 1
  2042 ;; Hardware stack levels required when called: 1
  2043 ;; This function calls:
  2044 ;;		_I2C_Master_Wait
  2045 ;; This function is called by:
  2046 ;;		_main
  2047 ;; This function uses a non-reentrant model
  2048 ;;
  2049                           
  2050  05FA                     _I2C_Master_Read:	
  2051                           ;psect for function _I2C_Master_Read
  2052                           
  2053  05FA                     l1031:	
  2054                           ;incstack = 0
  2055                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2056                           
  2057                           
  2058                           ;I2C.c: 53: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 54: {;I2C.c: 55:    
      +                           unsigned short temp;;I2C.c: 56:     I2C_Master_Wait();
  2059  05FA  120A  118A  2582  120A  118A  	fcall	_I2C_Master_Wait
  2060  05FF                     l1033:
  2061                           
  2062                           ;I2C.c: 57:     SSPCON2bits.RCEN = 1;
  2063  05FF  1683               	bsf	3,5	;RP0=1, select bank1
  2064  0600  1303               	bcf	3,6	;RP1=0, select bank1
  2065  0601  1591               	bsf	17,3	;volatile
  2066                           
  2067                           ;I2C.c: 58:     I2C_Master_Wait();
  2068  0602  120A  118A  2582  120A  118A  	fcall	_I2C_Master_Wait
  2069  0607                     l1035:
  2070                           
  2071                           ;I2C.c: 59:     temp = SSPBUF;
  2072  0607  1283               	bcf	3,5	;RP0=0, select bank0
  2073  0608  1303               	bcf	3,6	;RP1=0, select bank0
  2074  0609  0813               	movf	19,w	;volatile
  2075  060A  00F2               	movwf	??_I2C_Master_Read
  2076  060B  01F3               	clrf	??_I2C_Master_Read+1
  2077  060C  0872               	movf	??_I2C_Master_Read,w
  2078  060D  00F4               	movwf	I2C_Master_Read@temp
  2079  060E  0873               	movf	??_I2C_Master_Read+1,w
  2080  060F  00F5               	movwf	I2C_Master_Read@temp+1
  2081  0610                     l1037:
  2082                           
  2083                           ;I2C.c: 60:     I2C_Master_Wait();
  2084  0610  120A  118A  2582  120A  118A  	fcall	_I2C_Master_Wait
  2085  0615                     l1039:
  2086                           
  2087                           ;I2C.c: 61:     if(a == 1){
  2088  0615  0370               	decf	I2C_Master_Read@a,w
  2089  0616  0471               	iorwf	I2C_Master_Read@a+1,w
  2090  0617  1D03               	btfss	3,2
  2091  0618  2E1A               	goto	u251
  2092  0619  2E1B               	goto	u250
  2093  061A                     u251:
  2094  061A  2E1F               	goto	l97
  2095  061B                     u250:
  2096  061B                     l1041:
  2097                           
  2098                           ;I2C.c: 62:         SSPCON2bits.ACKDT = 0;
  2099  061B  1683               	bsf	3,5	;RP0=1, select bank1
  2100  061C  1303               	bcf	3,6	;RP1=0, select bank1
  2101  061D  1291               	bcf	17,5	;volatile
  2102                           
  2103                           ;I2C.c: 63:     }else{
  2104  061E  2E22               	goto	l98
  2105  061F                     l97:
  2106                           
  2107                           ;I2C.c: 64:         SSPCON2bits.ACKDT = 1;
  2108  061F  1683               	bsf	3,5	;RP0=1, select bank1
  2109  0620  1303               	bcf	3,6	;RP1=0, select bank1
  2110  0621  1691               	bsf	17,5	;volatile
  2111  0622                     l98:	
  2112                           ;I2C.c: 65:     }
  2113                           
  2114                           
  2115                           ;I2C.c: 66:     SSPCON2bits.ACKEN = 1;
  2116  0622  1611               	bsf	17,4	;volatile
  2117  0623                     l1043:
  2118                           
  2119                           ;I2C.c: 67:     return temp;
  2120  0623  0875               	movf	I2C_Master_Read@temp+1,w
  2121  0624  00F1               	movwf	?_I2C_Master_Read+1
  2122  0625  0874               	movf	I2C_Master_Read@temp,w
  2123  0626  00F0               	movwf	?_I2C_Master_Read
  2124  0627                     l99:
  2125  0627  0008               	return
  2126  0628                     __end_of_I2C_Master_Read:
  2127                           
  2128                           	psect	text15
  2129  0582                     __ptext15:	
  2130 ;; *************** function _I2C_Master_Wait *****************
  2131 ;; Defined at:
  2132 ;;		line 24 in file "I2C.c"
  2133 ;; Parameters:    Size  Location     Type
  2134 ;;		None
  2135 ;; Auto vars:     Size  Location     Type
  2136 ;;		None
  2137 ;; Return value:  Size  Location     Type
  2138 ;;                  1    wreg      void 
  2139 ;; Registers used:
  2140 ;;		wreg, status,2
  2141 ;; Tracked objects:
  2142 ;;		On entry : 0/0
  2143 ;;		On exit  : 0/0
  2144 ;;		Unchanged: 0/0
  2145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2146 ;;      Params:         0       0       0       0       0
  2147 ;;      Locals:         0       0       0       0       0
  2148 ;;      Temps:          0       0       0       0       0
  2149 ;;      Totals:         0       0       0       0       0
  2150 ;;Total ram usage:        0 bytes
  2151 ;; Hardware stack levels used: 1
  2152 ;; This function calls:
  2153 ;;		Nothing
  2154 ;; This function is called by:
  2155 ;;		_I2C_Master_Start
  2156 ;;		_I2C_Master_Stop
  2157 ;;		_I2C_Master_Write
  2158 ;;		_I2C_Master_Read
  2159 ;;		_I2C_Master_RepeatedStart
  2160 ;; This function uses a non-reentrant model
  2161 ;;
  2162                           
  2163  0582                     _I2C_Master_Wait:	
  2164                           ;psect for function _I2C_Master_Wait
  2165                           
  2166  0582                     l813:	
  2167                           ;incstack = 0
  2168                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2169                           
  2170  0582                     l79:	
  2171                           ;I2C.c: 26:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2172                           
  2173  0582  1683               	bsf	3,5	;RP0=1, select bank1
  2174  0583  1303               	bcf	3,6	;RP1=0, select bank1
  2175  0584  1914               	btfsc	20,2	;volatile
  2176  0585  2D87               	goto	u91
  2177  0586  2D88               	goto	u90
  2178  0587                     u91:
  2179  0587  2D82               	goto	l79
  2180  0588                     u90:
  2181  0588                     l815:
  2182  0588  0811               	movf	17,w	;volatile
  2183  0589  391F               	andlw	31
  2184  058A  1D03               	btfss	3,2
  2185  058B  2D8D               	goto	u101
  2186  058C  2D8E               	goto	u100
  2187  058D                     u101:
  2188  058D  2D82               	goto	l79
  2189  058E                     u100:
  2190  058E                     l82:
  2191  058E  0008               	return
  2192  058F                     __end_of_I2C_Master_Wait:
  2193  007E                     btemp	set	126	;btemp
  2194  007E                     wtemp0	set	126
  2195                           
  2196                           	psect	idloc
  2197                           
  2198                           ;Config register IDLOC0 @ 0x2000
  2199                           ;	unspecified, using default values
  2200  2000                     	org	8192
  2201  2000  3FFF               	dw	16383
  2202                           
  2203                           ;Config register IDLOC1 @ 0x2001
  2204                           ;	unspecified, using default values
  2205  2001                     	org	8193
  2206  2001  3FFF               	dw	16383
  2207                           
  2208                           ;Config register IDLOC2 @ 0x2002
  2209                           ;	unspecified, using default values
  2210  2002                     	org	8194
  2211  2002  3FFF               	dw	16383
  2212                           
  2213                           ;Config register IDLOC3 @ 0x2003
  2214                           ;	unspecified, using default values
  2215  2003                     	org	8195
  2216  2003  3FFF               	dw	16383
  2217                           
  2218                           	psect	config
  2219                           
  2220                           ;Config register CONFIG1 @ 0x2007
  2221                           ;	Oscillator Selection bits
  2222                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2223                           ;	Watchdog Timer Enable bit
  2224                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2225                           ;	Power-up Timer Enable bit
  2226                           ;	PWRTE = OFF, PWRT disabled
  2227                           ;	RE3/MCLR pin function select bit
  2228                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2229                           ;	Code Protection bit
  2230                           ;	CP = OFF, Program memory code protection is disabled
  2231                           ;	Data Code Protection bit
  2232                           ;	CPD = OFF, Data memory code protection is disabled
  2233                           ;	Brown Out Reset Selection bits
  2234                           ;	BOREN = OFF, BOR disabled
  2235                           ;	Internal External Switchover bit
  2236                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2237                           ;	Fail-Safe Clock Monitor Enabled bit
  2238                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2239                           ;	Low Voltage Programming Enable bit
  2240                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2241                           ;	In-Circuit Debugger Mode bit
  2242                           ;	DEBUG = 0x1, unprogrammed default
  2243  2007                     	org	8199
  2244  2007  20D4               	dw	8404
  2245                           
  2246                           ;Config register CONFIG2 @ 0x2008
  2247                           ;	Brown-out Reset Selection bit
  2248                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2249                           ;	Flash Program Memory Self Write Enable bits
  2250                           ;	WRT = OFF, Write protection off
  2251  2008                     	org	8200
  2252  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     11      11
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd8_Write_String@a	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 


Critical Paths under _main in COMMON

    _Lcd8_Init->_Lcd8_Cmd
    _I2C_Master_Init->___lldiv
    _Lcd8_Write_String->_Lcd8_Write_Char
    _Lcd8_Set_Cursor->_Lcd8_Cmd

Critical Paths under _main in BANK0

    _setup->_I2C_Master_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1234
                                              8 BANK0      3     3      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _Lcd8_Set_Cursor
                  _Lcd8_Write_String
                        _int_osc_MHz
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     442
                    _I2C_Master_Init
                          _Lcd8_Init
 ---------------------------------------------------------------------------------
 (2) _Lcd8_Init                                            2     2      0      30
                                              3 COMMON     2     2      0
                           _Lcd8_Cmd
                          _Lcd8_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd8_Port                                            1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _int_osc_MHz                                          3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd8_Write_String                                    6     4      2     181
                                              2 COMMON     6     4      2
                    _Lcd8_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd8_Write_Char                                      2     2      0      15
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Lcd8_Set_Cursor                                      4     3      1     225
                                              3 COMMON     4     3      1
                           _Lcd8_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd8_Cmd                                             3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     250
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     121
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd8_Set_Cursor
     _Lcd8_Cmd
   _Lcd8_Write_String
     _Lcd8_Write_Char
   _int_osc_MHz
   _setup
     _I2C_Master_Init
       ___lldiv
     _Lcd8_Init
       _Lcd8_Cmd
       _Lcd8_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      B       B       5       13.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Fri Aug 19 09:22:16 2022

                       l49 05D5                         l82 058E                         l91 0577  
                       l76 068E                         l85 056E                         l94 0581  
                       l79 0582                         l97 061F                         l98 0622  
                       l99 0627                         u90 0588                         u91 0587  
                      l114 06C7                        l123 0565                        l141 059E  
                      l109 06C6                        l126 05B2                        l135 05F9  
                      l138 071A                        l147 0656                        l275 0780  
                      l813 0582                        l821 0595                        l815 0588  
                      l751 05A5                        l823 059B                        l831 069F  
                      l753 05AF                        l817 0590                        l833 06A6  
                      l825 0690                        l745 0561                        l747 05A0  
                      l819 0593                        l835 06AB                        l827 0691  
                      l853 0566                        l861 056F                        l749 05A3  
                      l829 0698                        l781 06CE                        l855 056B  
                      l863 0574                        l839 06B0                        l791 06FC  
                      l783 06D7                        l793 0702                        l785 06E6  
                      l971 071B                        l795 0708                        l787 06EC  
                      l779 06C8                        l981 0748                        l973 072B  
                      l797 070E                        l789 06F7                        l983 075A  
                      l975 072E                        l991 0778                        l799 0714  
                      l985 0768                        l977 073B                        l987 0769  
                      l979 073F                        l995 0657                        l989 0772  
                      l997 065B                        l999 065E                        u100 058E  
                      u101 058D                        u210 0778                        u211 0777  
                      u220 066E                        u205 076A                        u230 05DC  
                      u150 072B                        u231 05DB                        u151 072A  
                      u240 05EE                        u241 05ED                        u225 0669  
                      u250 061B                        u170 073F                        u251 061A  
                      u171 073E                        u307 06E1                        u260 0656  
                      u261 0655                        u165 0730                        u317 06EE  
                      u190 075A                        u191 0759                        u327 06F9  
                      u337 0598                        u185 0741                        u347 05AA  
                      u195 0756                        u277 07AF                        u287 07F1  
                      u297 06D2                        fsr0 0004                        indf 0000  
                     l1001 068B                       l1003 068C                       l1011 05C6  
                     l1021 05DC                       l1101 06B8                       l1005 068D  
                     l1031 05FA                       l1015 0578                       l1023 05E1  
                     l1007 05B3                       l1041 061B                       l1033 05FF  
                     l1017 057D                       l1025 05E8                       l1009 05C1  
                     l1043 0623                       l1035 0607                       l1027 05EE  
                     l1019 05D7                       l1051 063E                       l1037 0610  
                     l1029 05F3                       l1053 0644                       l1061 0791  
                     l1039 0615                       l1047 0628                       l1071 07BB  
                     l1063 079A                       l1055 0781                       l1049 062B  
                     l1073 07C4                       l1065 07A2                       l1057 0787  
                     l1075 07CC                       l1067 07A7                       l1059 078C  
                     l1077 07D8                       l1069 07B6                       l1079 07E4  
                     _main 0781          ??_Lcd8_Set_Cursor 0074                       btemp 007E  
                     start 0000           ?_I2C_Master_Init 0020           ?_I2C_Master_Read 0070  
         ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070                      ?_main 0070  
                    _ANSEL 0188            __end_of___lldiv 0781                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088            int_osc_MHz@freq 0072  
                    _setup 05B3               ?_int_osc_MHz 0070                      status 0003  
         __end_of_Lcd8_Cmd 05B3                      wtemp0 007E            __initialization 07FC  
             __end_of_main 07FC          ??_Lcd8_Write_Char 0070                     ??_main 0028  
        ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0070         ??_I2C_Master_Start 0070  
       ??_I2C_Master_Write 0072                     ?_setup 0070                     _ANSELH 0189  
                   _SSPADD 0093                     _TRISC3 043B                     _TRISC4 043C  
                   _SSPCON 0014                     _SSPBUF 0013                  ??___lldiv 0078  
        __end_of_Lcd8_Init 071B          __end_of_Lcd8_Port 0566    __end_of__initialization 07FC  
           __pcstackCOMMON 0070              __end_of_setup 05D6                  ?_Lcd8_Cmd 0070  
          _Lcd8_Set_Cursor 05D6                    ??_setup 007E                 __pmaintext 0781  
         Lcd8_Set_Cursor@a 0075           Lcd8_Set_Cursor@b 0073           Lcd8_Set_Cursor@x 0076  
               ??_Lcd8_Cmd 0070                    _SSPCON2 0091                    _SSPSTAT 0094  
          _Lcd8_Write_Char 058F                    ___lldiv 071B    __end_of_Lcd8_Set_Cursor 05FA  
                  __ptext1 05B3                    __ptext2 06C8                    __ptext3 0560  
                  __ptext4 0657                    __ptext5 071B                    __ptext6 068F  
                  __ptext7 0628                    __ptext8 058F                    __ptext9 05D6  
                Lcd8_Cmd@a 0072       end_of_initialization 07FC            ___lldiv@divisor 0070  
          ___lldiv@counter 007D           I2C_Master_Init@c 0020           I2C_Master_Read@a 0070  
                _PORTCbits 0007                  _TRISCbits 0087    __end_of_Lcd8_Write_Char 059F  
                _Lcd8_Init 06C8                  _Lcd8_Port 0560           ?_Lcd8_Set_Cursor 0073  
      start_initialization 07FC          _Lcd8_Write_String 0628         ?_Lcd8_Write_String 0072  
        ??_I2C_Master_Init 0024          ??_I2C_Master_Read 0072          ??_I2C_Master_Wait 0070  
        ??_I2C_Master_Stop 0070                 ?_Lcd8_Init 0070                 ?_Lcd8_Port 0070  
      ??_Lcd8_Write_String 0074                  ___latbits 0002              __pcstackBANK0 0020  
__end_of_Lcd8_Write_String 0657              ??_int_osc_MHz 0070           ?_Lcd8_Write_Char 0070  
         _I2C_Master_Start 0566           _I2C_Master_Write 0578                   ?___lldiv 0070  
              ??_Lcd8_Init 0073           Lcd8_Write_Char@a 0071                ??_Lcd8_Port 0070  
                 _PIE1bits 008C        __end_of_int_osc_MHz 06C8                   _PIR1bits 000C  
                 _Lcd8_Cmd 059F        I2C_Master_Read@temp 0074            _I2C_Master_Init 0657  
          _I2C_Master_Read 05FA            _I2C_Master_Wait 0582            _I2C_Master_Stop 056F  
                 __ptext10 059F                   __ptext11 0578                   __ptext12 056F  
                 __ptext13 0566                   __ptext14 05FA                   __ptext15 0582  
              _int_osc_MHz 068F                 Lcd8_Port@a 0070   __end_of_I2C_Master_Start 056F  
 __end_of_I2C_Master_Write 0582                 _INTCONbits 000B           ___lldiv@dividend 0074  
               _OSCCONbits 008F         Lcd8_Write_String@a 0072         Lcd8_Write_String@i 0076  
  __end_of_I2C_Master_Init 068F    __end_of_I2C_Master_Read 0628    __end_of_I2C_Master_Wait 058F  
  __end_of_I2C_Master_Stop 0578           ___lldiv@quotient 0079          I2C_Master_Write@d 0070  
              _SSPCON2bits 0091  
